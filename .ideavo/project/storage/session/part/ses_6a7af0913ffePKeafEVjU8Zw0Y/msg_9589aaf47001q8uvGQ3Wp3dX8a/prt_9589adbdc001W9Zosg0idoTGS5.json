{
  "id": "prt_9589adbdc001W9Zosg0idoTGS5",
  "messageID": "msg_9589aaf47001q8uvGQ3Wp3dX8a",
  "sessionID": "ses_6a7af0913ffePKeafEVjU8Zw0Y",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_01PuycTDbkAz8MhTPsc4ncJ6",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/quick-screen/page.tsx"
    },
    "output": "<file>\n00001| 'use client'\n00002| \n00003| import { useState } from 'react'\n00004| import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\n00005| import { Button } from '@/components/ui/button'\n00006| import { Progress } from '@/components/ui/progress'\n00007| import { Badge } from '@/components/ui/badge'\n00008| import { CheckCircle, Circle, ArrowLeft, ArrowRight, Clock, AlertTriangle } from 'lucide-react'\n00009| import Link from 'next/link'\n00010| import { useTranslation } from '@/lib/language-context'\n00011| \n00012| const screeningQuestions = [\n00013|   {\n00014|     id: 1,\n00015|     question: \"Do you experience severe fatigue that is not relieved by rest?\",\n00016|     category: \"core\"\n00017|   },\n00018|   {\n00019|     id: 2,\n00020|     question: \"Does physical or mental activity make your symptoms worse (Post-Exertional Malaise)?\",\n00021|     category: \"pem\"\n00022|   },\n00023|   {\n00024|     id: 3,\n00025|     question: \"Do you have unrefreshing sleep, regardless of duration?\",\n00026|     category: \"core\"\n00027|   },\n00028|   {\n00029|     id: 4,\n00030|     question: \"Do you experience cognitive difficulties (brain fog, memory problems)?\",\n00031|     category: \"core\"\n00032|   },\n00033|   {\n00034|     id: 5,\n00035|     question: \"Do you have palpitations or rapid heart rate, especially when standing?\",\n00036|     category: \"cardiovascular\"\n00037|   },\n00038|   {\n00039|     id: 6,\n00040|     question: \"Do you experience dizziness or lightheadedness when standing up?\",\n00041|     category: \"orthostatic\"\n00042|   },\n00043|   {\n00044|     id: 7,\n00045|     question: \"Have you had COVID-19 or suspected COVID-19 infection?\",\n00046|     category: \"history\"\n00047|   },\n00048|   {\n00049|     id: 8,\n00050|     question: \"Have your symptoms persisted for 3 months or longer?\",\n00051|     category: \"duration\"\n00052|   },\n00053|   {\n00054|     id: 9,\n00055|     question: \"Do you experience muscle pain or joint pain without swelling?\",\n00056|     category: \"pain\"\n00057|   },\n00058|   {\n00059|     id: 10,\n00060|     question: \"Do you have frequent headaches or changes in headache patterns?\",\n00061|     category: \"neurological\"\n00062|   },\n00063|   {\n00064|     id: 11,\n00065|     question: \"Do you experience temperature dysregulation (feeling too hot/cold)?\",\n00066|     category: \"autonomic\"\n00067|   },\n00068|   {\n00069|     id: 12,\n00070|     question: \"Do you have gastrointestinal symptoms (nausea, bloating, changes in bowel habits)?\",\n00071|     category: \"gi\"\n00072|   },\n00073|   {\n00074|     id: 13,\n00075|     question: \"Do you experience shortness of breath or breathing difficulties?\",\n00076|     category: \"respiratory\"\n00077|   },\n00078|   {\n00079|     id: 14,\n00080|     question: \"Have you noticed decreased exercise tolerance or physical capacity?\",\n00081|     category: \"functional\"\n00082|   },\n00083|   {\n00084|     id: 15,\n00085|     question: \"Do you experience sensitivity to light, sound, or touch?\",\n00086|     category: \"sensory\"\n00087|   },\n00088|   {\n00089|     id: 16,\n00090|     question: \"Have you been unable to maintain your previous level of activity?\",\n00091|     category: \"functional\"\n00092|   }\n00093| ]\n00094| \n00095| export default function QuickScreen() {\n00096|   const [answers, setAnswers] = useState<Record<number, boolean>>({})\n00097|   const [currentQuestion, setCurrentQuestion] = useState(0)\n00098|   const [isComplete, setIsComplete] = useState(false)\n00099|   const { t } = useTranslation()\n00100| \n00101|   const handleAnswer = (questionId: number, answer: boolean) => {\n00102|     setAnswers(prev => ({\n00103|       ...prev,\n00104|       [questionId]: answer\n00105|     }))\n00106|   }\n00107| \n00108|   const nextQuestion = () => {\n00109|     if (currentQuestion < screeningQuestions.length - 1) {\n00110|       setCurrentQuestion(prev => prev + 1)\n00111|     } else {\n00112|       setIsComplete(true)\n00113|     }\n00114|   }\n00115| \n00116|   const prevQuestion = () => {\n00117|     if (currentQuestion > 0) {\n00118|       setCurrentQuestion(prev => prev - 1)\n00119|     }\n00120|   }\n00121| \n00122|   const calculateRisk = () => {\n00123|     const totalYes = Object.values(answers).filter(Boolean).length\n00124|     const coreSymptoms = [1, 3, 4].filter(id => answers[id]).length\n00125|     const pemPresent = answers[2]\n00126|     const covidHistory = answers[7]\n00127|     const chronicity = answers[8]\n00128|     \n00129|     let riskLevel = 'Low'\n00130|     let riskColor = 'bg-green-100 text-green-800'\n00131|     \n00132|     if (totalYes >= 8 && coreSymptoms >= 2 && pemPresent && chronicity) {\n00133|       riskLevel = 'High'\n00134|       riskColor = 'bg-red-100 text-red-800'\n00135|     } else if (totalYes >= 5 && (coreSymptoms >= 2 || pemPresent)) {\n00136|       riskLevel = 'Medium'\n00137|       riskColor = 'bg-yellow-100 text-yellow-800'\n00138|     }\n00139|     \n00140|     return { riskLevel, riskColor, totalYes, coreSymptoms, pemPresent, covidHistory, chronicity }\n00141|   }\n00142| \n00143|   const progress = ((currentQuestion + 1) / t.quickScreen.questions.length) * 100\n00144|   const currentQuestionData = {\n00145|     id: currentQuestion + 1,\n00146|     question: t.quickScreen.questions[currentQuestion],\n00147|     category: Object.keys(t.quickScreen.categories)[currentQuestion % Object.keys(t.quickScreen.categories).length]\n00148|   }\n00149|   const currentAnswer = answers[currentQuestionData?.id]\n00150| \n00151|   if (isComplete) {\n00152|     const risk = calculateRisk()\n00153|     \n00154|     return (\n00155|       <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00156|         <div className=\"container mx-auto px-4 max-w-2xl\">\n00157|           <Card>\n00158|             <CardHeader className=\"text-center\">\n00159|               <CardTitle className=\"flex items-center justify-center gap-2 text-2xl\">\n00160|                 <CheckCircle className=\"h-6 w-6 text-green-600\" />\n00161|                 Screening Complete\n00162|               </CardTitle>\n00163|               <CardDescription>\n00164|                 Based on your responses, here's your risk assessment\n00165|               </CardDescription>\n00166|             </CardHeader>\n00167|             <CardContent className=\"space-y-6\">\n00168|               <div className=\"text-center\">\n00169|                 <Badge className={`px-4 py-2 text-lg ${risk.riskColor}`}>\n00170|                   {risk.riskLevel} Risk for ME/CFS, Long COVID, or POTS\n00171|                 </Badge>\n00172|               </div>\n00173| \n00174|               <div className=\"grid md:grid-cols-2 gap-4\">\n00175|                 <div className=\"bg-gray-50 p-4 rounded-lg\">\n00176|                   <h4 className=\"font-semibold mb-2\">Assessment Results</h4>\n00177|                   <ul className=\"text-sm space-y-1\">\n00178|                     <li>Total positive responses: {risk.totalYes}/16</li>\n00179|                     <li>Core symptoms present: {risk.coreSymptoms}/3</li>\n00180|                     <li>Post-exertional malaise: {risk.pemPresent ? 'Yes' : 'No'}</li>\n00181|                     <li>COVID history: {risk.covidHistory ? 'Yes' : 'No'}</li>\n00182|                     <li>Chronic symptoms (≥3 months): {risk.chronicity ? 'Yes' : 'No'}</li>\n00183|                   </ul>\n00184|                 </div>\n00185| \n00186|                 <div className=\"bg-blue-50 p-4 rounded-lg\">\n00187|                   <h4 className=\"font-semibold mb-2 text-blue-900\">Next Steps</h4>\n00188|                   <ul className=\"text-sm space-y-1 text-blue-800\">\n00189|                     {risk.riskLevel === 'High' && (\n00190|                       <>\n00191|                         <li>• Proceed to Red-flag Checker</li>\n00192|                         <li>• Complete Stand-Test Pro</li>\n00193|                         <li>• Consider PEM-Quest assessment</li>\n00194|                       </>\n00195|                     )}\n00196|                     {risk.riskLevel === 'Medium' && (\n00197|                       <>\n00198|                         <li>• Consider Red-flag Checker</li>\n00199|                         <li>• Monitor symptoms closely</li>\n00200|                         <li>• Follow-up in 4-6 weeks</li>\n00201|                       </>\n00202|                     )}\n00203|                     {risk.riskLevel === 'Low' && (\n00204|                       <>\n00205|                         <li>• Routine clinical assessment</li>\n00206|                         <li>• Consider other diagnoses</li>\n00207|                         <li>• Reassess if symptoms worsen</li>\n00208|                       </>\n00209|                     )}\n00210|                   </ul>\n00211|                 </div>\n00212|               </div>\n00213| \n00214|               <div className=\"flex gap-4 justify-center\">\n00215|                 <Button onClick={() => {\n00216|                   setAnswers({})\n00217|                   setCurrentQuestion(0)\n00218|                   setIsComplete(false)\n00219|                 }} variant=\"outline\">\n00220|                   Retake Screening\n00221|                 </Button>\n00222|                 {risk.riskLevel !== 'Low' && (\n00223|                   <Button asChild>\n00224|                     <Link href=\"/red-flag-checker\">\n00225|                       Continue to Red-flag Checker\n00226|                     </Link>\n00227|                   </Button>\n00228|                 )}\n00229|               </div>\n00230|             </CardContent>\n00231|           </Card>\n00232|         </div>\n00233|       </div>\n00234|     )\n00235|   }\n00236| \n00237|   return (\n00238|     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00239|       <div className=\"container mx-auto px-4 max-w-2xl\">\n00240|         <div className=\"mb-6\">\n00241|             <Link href=\"/\" className=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 mb-4\">\n00242|             <ArrowLeft className=\"h-4 w-4\" />\n00243|             {t.app.backToDashboard}\n00244|           </Link>\n00245|           \n00246|           <div className=\"flex items-center gap-4 mb-4\">\n00247|             <Clock className=\"h-5 w-5 text-gray-600\" />\n00248|             <div>\n00249|               <h1 className=\"text-2xl font-bold text-gray-900\">{t.quickScreen.title}</h1>\n00250|               <p className=\"text-gray-600\">{t.quickScreen.description}</p>\n00251|             </div>\n00252|           </div>\n00253|           \n00254|           <Progress value={progress} className=\"h-2\" />\n00255|             <p className=\"text-sm text-gray-600 mt-2\">\n00256|             {t.common.question} {currentQuestion + 1} {t.common.of} {t.quickScreen.questions.length}\n00257|           </p>\n00258|         </div>\n00259| \n00260|         <Card>\n00261|           <CardHeader>\n00262|             <CardTitle className=\"text-lg\">\n00263|               {currentQuestionData.question}\n00264|             </CardTitle>\n00265|             <CardDescription>\n00266|               Category: {currentQuestionData.category.charAt(0).toUpperCase() + currentQuestionData.category.slice(1)}\n00267|             </CardDescription>\n00268|           </CardHeader>\n00269|           <CardContent>\n00270|             <div className=\"space-y-4\">\n00271|               <div className=\"flex gap-4 justify-center\">\n00272|                 <Button\n00273|                   onClick={() => handleAnswer(currentQuestionData.id, true)}\n00274|                   variant={currentAnswer === true ? \"default\" : \"outline\"}\n00275|                   className=\"flex items-center gap-2 px-8\"\n00276|                 >\n00277|                   {currentAnswer === true ? <CheckCircle className=\"h-4 w-4\" /> : <Circle className=\"h-4 w-4\" />}\n00278|                   {t.common.yes}\n00279|                 </Button>\n00280|                 <Button\n00281|                   onClick={() => handleAnswer(currentQuestionData.id, false)}\n00282|                   variant={currentAnswer === false ? \"default\" : \"outline\"}\n00283|                   className=\"flex items-center gap-2 px-8\"\n00284|                 >\n00285|                   {currentAnswer === false ? <CheckCircle className=\"h-4 w-4\" /> : <Circle className=\"h-4 w-4\" />}\n00286|                   {t.common.no}\n00287|                 </Button>\n00288|               </div>\n00289| \n00290|               <div className=\"flex justify-between pt-6\">\n00291|                 <Button \n00292|                   onClick={prevQuestion} \n00293|                   disabled={currentQuestion === 0}\n00294|                   variant=\"outline\"\n00295|                   className=\"flex items-center gap-2\"\n00296|                 >\n00297|                   <ArrowLeft className=\"h-4 w-4\" />\n00298|                   {t.common.previous}\n00299|                 </Button>\n00300|                 \n00301|                 <Button \n00302|                   onClick={nextQuestion}\n00303|                   disabled={currentAnswer === undefined}\n00304|                   className=\"flex items-center gap-2\"\n00305|                 >\n00306|                   {currentQuestion === t.quickScreen.questions.length - 1 ? t.common.complete : t.common.next}\n00307|                   <ArrowRight className=\"h-4 w-4\" />\n00308|                 </Button>\n00309|               </div>\n00310|             </div>\n00311|           </CardContent>\n00312|         </Card>\n00313| \n00314|         <div className=\"mt-6 text-center\">\n00315|           <div className=\"flex items-center justify-center gap-2 text-sm text-gray-600\">\n00316|             <AlertTriangle className=\"h-4 w-4\" />\n00317|             This screening tool is for clinical decision support only and does not replace professional medical judgment\n00318|           </div>\n00319|         </div>\n00320|       </div>\n00321|     </div>\n00322|   )\n00323| }\n</file>",
    "metadata": {
      "preview": "'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Progress } from '@/components/ui/progress'\nimport { Badge } from '@/components/ui/badge'\nimport { CheckCircle, Circle, ArrowLeft, ArrowRight, Clock, AlertTriangle } from 'lucide-react'\nimport Link from 'next/link'\nimport { useTranslation } from '@/lib/language-context'\n\nconst screeningQuestions = [\n  {\n    id: 1,\n    question: \"Do you experience severe fatigue that is not relieved by rest?\",\n    category: \"core\"\n  },\n  {\n    id: 2,\n    question: \"Does physical or mental activity make your symptoms worse (Post-Exertional Malaise)?\","
    },
    "title": "app/quick-screen/page.tsx",
    "time": {
      "start": 1758128168711,
      "end": 1758128168718
    }
  }
}