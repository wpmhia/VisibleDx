{
  "id": "prt_9589ae34a001PYHUiloRyMmd6r",
  "messageID": "msg_9589aaf47001q8uvGQ3Wp3dX8a",
  "sessionID": "ses_6a7af0913ffePKeafEVjU8Zw0Y",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_01FddZU25nZVCyA8eq22EwHs",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/criteria-engine/page.tsx"
    },
    "output": "<file>\n00001| 'use client'\n00002| \n00003| import { useState } from 'react'\n00004| import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\n00005| import { Button } from '@/components/ui/button'\n00006| import { Checkbox } from '@/components/ui/checkbox'\n00007| import { Badge } from '@/components/ui/badge'\n00008| import { Alert, AlertDescription } from '@/components/ui/alert'\n00009| import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\n00010| import { Label } from '@/components/ui/label'\n00011| import { ArrowLeft, BarChart3, CheckCircle, AlertTriangle, FileText, Download } from 'lucide-react'\n00012| import Link from 'next/link'\n00013| \n00014| interface DiagnosticCriteria {\n00015|   id: string\n00016|   condition: string\n00017|   met: boolean\n00018|   criteria: { id: string; description: string; met: boolean }[]\n00019|   icdCode: string\n00020|   confidence: 'high' | 'medium' | 'low'\n00021| }\n00022| \n00023| const mecfsCriteria = [\n00024|   { id: 'fatigue', description: 'Substantial reduction or impairment in activity levels that persists for ≥6 months', met: false },\n00025|   { id: 'pem', description: 'Post-exertional malaise (PEM) present', met: false },\n00026|   { id: 'sleep', description: 'Unrefreshing sleep', met: false },\n00027|   { id: 'cognitive', description: 'Cognitive impairment (brain fog)', met: false },\n00028|   { id: 'orthostatic', description: 'Orthostatic intolerance OR autonomic dysfunction', met: false }\n00029| ]\n00030| \n00031| const longCovidCriteria = [\n00032|   { id: 'covid_history', description: 'Confirmed or probable SARS-CoV-2 infection', met: false },\n00033|   { id: 'duration', description: 'Symptoms persist ≥3 months from acute illness', met: false },\n00034|   { id: 'multisystem', description: 'Multi-system symptoms affecting daily functioning', met: false },\n00035|   { id: 'unexplained', description: 'Symptoms not explained by alternative diagnosis', met: false }\n00036| ]\n00037| \n00038| const potsCriteria = [\n00039|   { id: 'hr_increase', description: 'Heart rate increase ≥30 bpm within 10 minutes of standing', met: false },\n00040|   { id: 'sustained', description: 'Sustained heart rate ≥120 bpm while standing', met: false },\n00041|   { id: 'symptoms', description: 'Orthostatic symptoms (dizziness, palpitations, fatigue)', met: false },\n00042|   { id: 'duration_pots', description: 'Symptoms present for ≥3 months', met: false },\n00043|   { id: 'no_oh', description: 'Absence of orthostatic hypotension', met: false }\n00044| ]\n00045| \n00046| export default function CriteriaEngine() {\n00047|   const [mecfsChecked, setMecfsChecked] = useState(mecfsCriteria.map(c => ({ ...c })))\n00048|   const [longCovidChecked, setLongCovidChecked] = useState(longCovidCriteria.map(c => ({ ...c })))\n00049|   const [potsChecked, setPotsChecked] = useState(potsCriteria.map(c => ({ ...c })))\n00050|   const [covidTiming, setCovidTiming] = useState<string>('')\n00051|   const [isComplete, setIsComplete] = useState(false)\n00052| \n00053|   const handleMECFSChange = (id: string, checked: boolean) => {\n00054|     setMecfsChecked(prev => prev.map(item => \n00055|       item.id === id ? { ...item, met: checked } : item\n00056|     ))\n00057|   }\n00058| \n00059|   const handleLongCovidChange = (id: string, checked: boolean) => {\n00060|     setLongCovidChecked(prev => prev.map(item => \n00061|       item.id === id ? { ...item, met: checked } : item\n00062|     ))\n00063|   }\n00064| \n00065|   const handlePOTSChange = (id: string, checked: boolean) => {\n00066|     setPotsChecked(prev => prev.map(item => \n00067|       item.id === id ? { ...item, met: checked } : item\n00068|     ))\n00069|   }\n00070| \n00071|   const calculateDiagnoses = (): DiagnosticCriteria[] => {\n00072|     const diagnoses: DiagnosticCriteria[] = []\n00073| \n00074|     // ME/CFS Diagnosis (requires fatigue, PEM, sleep, and either cognitive OR orthostatic)\n00075|     const mecfsCore = mecfsChecked.filter(c => ['fatigue', 'pem', 'sleep'].includes(c.id) && c.met).length\n00076|     const mecfsAdditional = mecfsChecked.filter(c => ['cognitive', 'orthostatic'].includes(c.id) && c.met).length\n00077|     const mecfsMet = mecfsCore === 3 && mecfsAdditional >= 1\n00078|     \n00079|     diagnoses.push({\n00080|       id: 'mecfs',\n00081|       condition: 'Myalgic Encephalomyelitis/Chronic Fatigue Syndrome (ME/CFS)',\n00082|       met: mecfsMet,\n00083|       criteria: mecfsChecked,\n00084|       icdCode: 'G93.32',\n00085|       confidence: mecfsMet ? (mecfsCore === 3 && mecfsAdditional === 2 ? 'high' : 'medium') : 'low'\n00086|     })\n00087| \n00088|     // Long COVID Diagnosis\n00089|     const longCovidMet = longCovidChecked.filter(c => c.met).length >= 3\n00090|     diagnoses.push({\n00091|       id: 'longcovid',\n00092|       condition: 'Long COVID (Post-acute sequelae of SARS-CoV-2)',\n00093|       met: longCovidMet,\n00094|       criteria: longCovidChecked,\n00095|       icdCode: 'U09.9',\n00096|       confidence: longCovidMet ? 'high' : 'low'\n00097|     })\n00098| \n00099|     // POTS Diagnosis (requires HR increase + symptoms + duration + no OH)\n00100|     const potsEssential = potsChecked.filter(c => ['hr_increase', 'symptoms', 'duration_pots', 'no_oh'].includes(c.id) && c.met).length\n00101|     const potsMet = potsEssential >= 4\n00102|     \n00103|     diagnoses.push({\n00104|       id: 'pots',\n00105|       condition: 'Postural Orthostatic Tachycardia Syndrome (POTS)',\n00106|       met: potsMet,\n00107|       criteria: potsChecked,\n00108|       icdCode: 'I47.1',\n00109|       confidence: potsMet ? 'high' : 'low'\n00110|     })\n00111| \n00112|     return diagnoses\n00113|   }\n00114| \n00115|   const generateReport = () => {\n00116|     const diagnoses = calculateDiagnoses()\n00117|     const positives = diagnoses.filter(d => d.met)\n00118|     \n00119|     let report = \"AutoDx Clinical Decision Support Report\\n\"\n00120|     report += \"=====================================\\n\\n\"\n00121|     \n00122|     report += \"DIAGNOSTIC SUMMARY:\\n\"\n00123|     if (positives.length === 0) {\n00124|       report += \"• No criteria met for ME/CFS, Long COVID, or POTS\\n\"\n00125|       report += \"• Consider alternative diagnoses\\n\"\n00126|       report += \"• Reassess if symptoms progress\\n\\n\"\n00127|     } else {\n00128|       positives.forEach(dx => {\n00129|         report += `• ${dx.condition} - CRITERIA MET (${dx.icdCode})\\n`\n00130|         report += `  Confidence: ${dx.confidence.toUpperCase()}\\n`\n00131|       })\n00132|       report += \"\\n\"\n00133|     }\n00134| \n00135|     report += \"DETAILED CRITERIA ASSESSMENT:\\n\\n\"\n00136|     \n00137|     diagnoses.forEach(dx => {\n00138|       report += `${dx.condition} (${dx.icdCode}):\\n`\n00139|       dx.criteria.forEach(criterion => {\n00140|         report += `  ${criterion.met ? '✓' : '✗'} ${criterion.description}\\n`\n00141|       })\n00142|       report += `  Result: ${dx.met ? 'CRITERIA MET' : 'Criteria not met'}\\n\\n`\n00143|     })\n00144| \n00145|     return report\n00146|   }\n00147| \n00148|   if (isComplete) {\n00149|     const diagnoses = calculateDiagnoses()\n00150|     const positives = diagnoses.filter(d => d.met)\n00151|     \n00152|     return (\n00153|       <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00154|         <div className=\"container mx-auto px-4 max-w-4xl\">\n00155|           <Card>\n00156|             <CardHeader className=\"text-center\">\n00157|               <CardTitle className=\"flex items-center justify-center gap-2 text-2xl\">\n00158|                 <CheckCircle className=\"h-6 w-6 text-green-600\" />\n00159|                 Diagnostic Criteria Assessment Complete\n00160|               </CardTitle>\n00161|               <CardDescription>\n00162|                 Based on CDC, NASEM, ESC, WHO guidelines\n00163|               </CardDescription>\n00164|             </CardHeader>\n00165|             <CardContent className=\"space-y-6\">\n00166|               {positives.length > 0 ? (\n00167|                 <div className=\"space-y-4\">\n00168|                   <h3 className=\"text-lg font-semibold text-center mb-4\">Diagnoses Meeting Criteria</h3>\n00169|                   {positives.map((diagnosis) => (\n00170|                     <Alert key={diagnosis.id} className=\"border-green-200 bg-green-50\">\n00171|                       <CheckCircle className=\"h-4 w-4 text-green-600\" />\n00172|                       <AlertDescription>\n00173|                         <div className=\"flex justify-between items-start\">\n00174|                           <div>\n00175|                             <strong className=\"text-green-800\">{diagnosis.condition}</strong>\n00176|                             <p className=\"text-green-700 text-sm mt-1\">\n00177|                               ICD-10 Code: {diagnosis.icdCode} | Confidence: {diagnosis.confidence}\n00178|                             </p>\n00179|                           </div>\n00180|                           <Badge className=\"bg-green-100 text-green-800\">\n00181|                             CRITERIA MET\n00182|                           </Badge>\n00183|                         </div>\n00184|                       </AlertDescription>\n00185|                     </Alert>\n00186|                   ))}\n00187|                 </div>\n00188|               ) : (\n00189|                 <Alert>\n00190|                   <AlertTriangle className=\"h-4 w-4\" />\n00191|                   <AlertDescription>\n00192|                     <strong>No Diagnostic Criteria Met</strong><br />\n00193|                     Consider alternative diagnoses or reassess if symptoms progress. \n00194|                     Some patients may have subclinical presentations requiring ongoing monitoring.\n00195|                   </AlertDescription>\n00196|                 </Alert>\n00197|               )}\n00198| \n00199|               <div className=\"grid md:grid-cols-3 gap-4\">\n00200|                 {diagnoses.map((diagnosis) => (\n00201|                   <Card key={diagnosis.id} className={`border-2 ${\n00202|                     diagnosis.met ? 'border-green-500 bg-green-50' : 'border-gray-200'\n00203|                   }`}>\n00204|                     <CardHeader className=\"pb-3\">\n00205|                       <CardTitle className=\"text-sm font-semibold\">\n00206|                         {diagnosis.condition.split('(')[0].trim()}\n00207|                       </CardTitle>\n00208|                       <div className=\"flex justify-between items-center\">\n00209|                         <Badge variant={diagnosis.met ? 'default' : 'secondary'} className=\"text-xs\">\n00210|                           {diagnosis.icdCode}\n00211|                         </Badge>\n00212|                         <Badge variant={diagnosis.met ? 'default' : 'outline'} className=\"text-xs\">\n00213|                           {diagnosis.met ? 'Met' : 'Not Met'}\n00214|                         </Badge>\n00215|                       </div>\n00216|                     </CardHeader>\n00217|                     <CardContent>\n00218|                       <div className=\"space-y-2\">\n00219|                         {diagnosis.criteria.map((criterion) => (\n00220|                           <div key={criterion.id} className=\"flex items-start gap-2 text-xs\">\n00221|                             <span className={criterion.met ? 'text-green-600' : 'text-gray-400'}>\n00222|                               {criterion.met ? '✓' : '✗'}\n00223|                             </span>\n00224|                             <span className={criterion.met ? 'text-green-700' : 'text-gray-600'}>\n00225|                               {criterion.description}\n00226|                             </span>\n00227|                           </div>\n00228|                         ))}\n00229|                       </div>\n00230|                     </CardContent>\n00231|                   </Card>\n00232|                 ))}\n00233|               </div>\n00234| \n00235|               <div className=\"bg-blue-50 p-4 rounded-lg\">\n00236|                 <h4 className=\"font-semibold mb-2 text-blue-900\">Clinical Recommendations</h4>\n00237|                 <div className=\"text-blue-800 text-sm space-y-2\">\n00238|                   {positives.some(d => d.id === 'mecfs') && (\n00239|                     <div>\n00240|                       <strong>ME/CFS Management:</strong>\n00241|                       <ul className=\"ml-4 list-disc space-y-1 mt-1\">\n00242|                         <li>Implement activity pacing and energy management</li>\n00243|                         <li>Avoid graded exercise therapy (GET)</li>\n00244|                         <li>Consider symptom-directed treatments</li>\n00245|                         <li>Specialist ME/CFS clinic referral if available</li>\n00246|                       </ul>\n00247|                     </div>\n00248|                   )}\n00249|                   {positives.some(d => d.id === 'longcovid') && (\n00250|                     <div>\n00251|                       <strong>Long COVID Management:</strong>\n00252|                       <ul className=\"ml-4 list-disc space-y-1 mt-1\">\n00253|                         <li>Multidisciplinary approach to symptom management</li>\n00254|                         <li>Long COVID clinic referral if available</li>\n00255|                         <li>Monitor for improvement over time</li>\n00256|                         <li>Address individual symptoms (fatigue, cognitive, respiratory)</li>\n00257|                       </ul>\n00258|                     </div>\n00259|                   )}\n00260|                   {positives.some(d => d.id === 'pots') && (\n00261|                     <div>\n00262|                       <strong>POTS Management:</strong>\n00263|                       <ul className=\"ml-4 list-disc space-y-1 mt-1\">\n00264|                         <li>Proceed to subtype determination for targeted therapy</li>\n00265|                         <li>Non-pharmacological: salt, fluids, compression garments</li>\n00266|                         <li>Consider cardiology or autonomic specialist referral</li>\n00267|                         <li>Gradual exercise reconditioning when appropriate</li>\n00268|                       </ul>\n00269|                     </div>\n00270|                   )}\n00271|                 </div>\n00272|               </div>\n00273| \n00274|               <div className=\"flex gap-4 justify-center\">\n00275|                 <Button onClick={() => {\n00276|                   setMecfsChecked(mecfsCriteria.map(c => ({ ...c })))\n00277|                   setLongCovidChecked(longCovidCriteria.map(c => ({ ...c })))\n00278|                   setPotsChecked(potsCriteria.map(c => ({ ...c })))\n00279|                   setIsComplete(false)\n00280|                 }} variant=\"outline\">\n00281|                   Reassess Criteria\n00282|                 </Button>\n00283|                 <Button onClick={() => {\n00284|                   const report = generateReport()\n00285|                   const blob = new Blob([report], { type: 'text/plain' })\n00286|                   const url = URL.createObjectURL(blob)\n00287|                   const a = document.createElement('a')\n00288|                   a.href = url\n00289|                   a.download = 'autodx-diagnostic-report.txt'\n00290|                   a.click()\n00291|                   URL.revokeObjectURL(url)\n00292|                 }} className=\"flex items-center gap-2\">\n00293|                   <Download className=\"h-4 w-4\" />\n00294|                   Download Report\n00295|                 </Button>\n00296|                 {positives.some(d => d.id === 'pots') && (\n00297|                   <Button asChild>\n00298|                     <Link href=\"/subtype-advisor\">\n00299|                       POTS Subtype Analysis\n00300|                     </Link>\n00301|                   </Button>\n00302|                 )}\n00303|               </div>\n00304|             </CardContent>\n00305|           </Card>\n00306|         </div>\n00307|       </div>\n00308|     )\n00309|   }\n00310| \n00311|   return (\n00312|     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00313|       <div className=\"container mx-auto px-4 max-w-4xl\">\n00314|         <div className=\"mb-6\">\n00315|           <Link href=\"/\" className=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 mb-4\">\n00316|             <ArrowLeft className=\"h-4 w-4\" />\n00317|             Back to Dashboard\n00318|           </Link>\n00319|           \n00320|           <div className=\"flex items-center gap-4 mb-4\">\n00321|             <BarChart3 className=\"h-5 w-5 text-blue-600\" />\n00322|             <div>\n00323|               <h1 className=\"text-2xl font-bold text-gray-900\">Criteria Engine</h1>\n00324|               <p className=\"text-gray-600\">Apply CDC, NASEM, ESC, WHO diagnostic criteria for final determination</p>\n00325|             </div>\n00326|           </div>\n00327|         </div>\n00328| \n00329|         <div className=\"space-y-6\">\n00330|           <Card>\n00331|             <CardHeader>\n00332|               <CardTitle className=\"text-lg text-blue-800\">ME/CFS Criteria (CDC/NASEM 2015)</CardTitle>\n00333|               <CardDescription>\n00334|                 Requires substantial fatigue, PEM, unrefreshing sleep, AND either cognitive impairment OR orthostatic intolerance\n00335|               </CardDescription>\n00336|             </CardHeader>\n00337|             <CardContent>\n00338|               <div className=\"space-y-3\">\n00339|                 {mecfsChecked.map((criterion) => (\n00340|                   <div key={criterion.id} className=\"flex items-start space-x-3 p-3 rounded-lg border hover:bg-gray-50\">\n00341|                     <Checkbox\n00342|                       id={criterion.id}\n00343|                       checked={criterion.met}\n00344|                       onCheckedChange={(checked) => handleMECFSChange(criterion.id, !!checked)}\n00345|                     />\n00346|                     <Label htmlFor={criterion.id} className=\"cursor-pointer text-sm flex-1\">\n00347|                       {criterion.description}\n00348|                     </Label>\n00349|                   </div>\n00350|                 ))}\n00351|               </div>\n00352|             </CardContent>\n00353|           </Card>\n00354| \n00355|           <Card>\n00356|             <CardHeader>\n00357|               <CardTitle className=\"text-lg text-green-800\">Long COVID Criteria (WHO/NASEM 2024)</CardTitle>\n00358|               <CardDescription>\n00359|                 Post-acute sequelae of SARS-CoV-2 infection with persistent multi-system symptoms\n00360|               </CardDescription>\n00361|             </CardHeader>\n00362|             <CardContent>\n00363|               <div className=\"space-y-3\">\n00364|                 {longCovidChecked.map((criterion) => (\n00365|                   <div key={criterion.id} className=\"flex items-start space-x-3 p-3 rounded-lg border hover:bg-gray-50\">\n00366|                     <Checkbox\n00367|                       id={criterion.id}\n00368|                       checked={criterion.met}\n00369|                       onCheckedChange={(checked) => handleLongCovidChange(criterion.id, !!checked)}\n00370|                     />\n00371|                     <Label htmlFor={criterion.id} className=\"cursor-pointer text-sm flex-1\">\n00372|                       {criterion.description}\n00373|                     </Label>\n00374|                   </div>\n00375|                 ))}\n00376|               </div>\n00377|               \n00378|               {longCovidChecked.find(c => c.id === 'covid_history')?.met && (\n00379|                 <div className=\"mt-4 p-3 bg-green-50 rounded-lg\">\n00380|                   <Label className=\"text-sm font-medium\">COVID-19 infection timing:</Label>\n00381|                   <RadioGroup value={covidTiming} onValueChange={setCovidTiming} className=\"mt-2\">\n00382|                     <div className=\"flex items-center space-x-2\">\n00383|                       <RadioGroupItem value=\"confirmed\" id=\"confirmed\" />\n00384|                       <Label htmlFor=\"confirmed\" className=\"text-sm\">Confirmed by test</Label>\n00385|                     </div>\n00386|                     <div className=\"flex items-center space-x-2\">\n00387|                       <RadioGroupItem value=\"probable\" id=\"probable\" />\n00388|                       <Label htmlFor=\"probable\" className=\"text-sm\">Probable based on symptoms/exposure</Label>\n00389|                     </div>\n00390|                     <div className=\"flex items-center space-x-2\">\n00391|                       <RadioGroupItem value=\"suspected\" id=\"suspected\" />\n00392|                       <Label htmlFor=\"suspected\" className=\"text-sm\">Suspected based on timing</Label>\n00393|                     </div>\n00394|                   </RadioGroup>\n00395|                 </div>\n00396|               )}\n00397|             </CardContent>\n00398|           </Card>\n00399| \n00400|           <Card>\n00401|             <CardHeader>\n00402|               <CardTitle className=\"text-lg text-purple-800\">POTS Criteria (ESC 2018/AAS-EFAS 2021)</CardTitle>\n00403|               <CardDescription>\n00404|                 Heart rate increase ≥30 bpm within 10 minutes of standing, with symptoms but without orthostatic hypotension\n00405|               </CardDescription>\n00406|             </CardHeader>\n00407|             <CardContent>\n00408|               <div className=\"space-y-3\">\n00409|                 {potsChecked.map((criterion) => (\n00410|                   <div key={criterion.id} className=\"flex items-start space-x-3 p-3 rounded-lg border hover:bg-gray-50\">\n00411|                     <Checkbox\n00412|                       id={criterion.id}\n00413|                       checked={criterion.met}\n00414|                       onCheckedChange={(checked) => handlePOTSChange(criterion.id, !!checked)}\n00415|                     />\n00416|                     <Label htmlFor={criterion.id} className=\"cursor-pointer text-sm flex-1\">\n00417|                       {criterion.description}\n00418|                     </Label>\n00419|                   </div>\n00420|                 ))}\n00421|               </div>\n00422|             </CardContent>\n00423|           </Card>\n00424| \n00425|           <div className=\"flex justify-center\">\n00426|             <Button onClick={() => setIsComplete(true)} size=\"lg\" className=\"px-8\">\n00427|               <FileText className=\"h-4 w-4 mr-2\" />\n00428|               Generate Diagnostic Report\n00429|             </Button>\n00430|           </div>\n00431|         </div>\n00432|       </div>\n00433|     </div>\n00434|   )\n00435| }\n</file>",
    "metadata": {
      "preview": "'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { Badge } from '@/components/ui/badge'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\nimport { Label } from '@/components/ui/label'\nimport { ArrowLeft, BarChart3, CheckCircle, AlertTriangle, FileText, Download } from 'lucide-react'\nimport Link from 'next/link'\n\ninterface DiagnosticCriteria {\n  id: string\n  condition: string\n  met: boolean\n  criteria: { id: string; description: string; met: boolean }[]\n  icdCode: string\n  confidence: 'high' | 'medium' | 'low'"
    },
    "title": "app/criteria-engine/page.tsx",
    "time": {
      "start": 1758128170161,
      "end": 1758128170163
    }
  }
}