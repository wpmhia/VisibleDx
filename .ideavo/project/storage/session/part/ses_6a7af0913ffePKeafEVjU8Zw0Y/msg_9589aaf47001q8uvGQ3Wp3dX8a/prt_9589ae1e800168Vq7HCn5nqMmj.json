{
  "id": "prt_9589ae1e800168Vq7HCn5nqMmj",
  "messageID": "msg_9589aaf47001q8uvGQ3Wp3dX8a",
  "sessionID": "ses_6a7af0913ffePKeafEVjU8Zw0Y",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_01UHmUa3o8TD6hGbQsx3s5XD",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/pem-quest/page.tsx"
    },
    "output": "<file>\n00001| 'use client'\n00002| \n00003| import { useState } from 'react'\n00004| import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\n00005| import { Button } from '@/components/ui/button'\n00006| import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\n00007| import { Label } from '@/components/ui/label'\n00008| import { Progress } from '@/components/ui/progress'\n00009| import { Badge } from '@/components/ui/badge'\n00010| import { Alert, AlertDescription } from '@/components/ui/alert'\n00011| import { ArrowLeft, ArrowRight, Activity, Clock, TrendingDown, CheckCircle } from 'lucide-react'\n00012| import Link from 'next/link'\n00013| \n00014| interface PEMQuestion {\n00015|   id: string\n00016|   question: string\n00017|   description?: string\n00018|   options: { value: string; label: string; score: number }[]\n00019| }\n00020| \n00021| const pemQuestions: PEMQuestion[] = [\n00022|   {\n00023|     id: 'frequency',\n00024|     question: 'How often do you experience a worsening of symptoms following physical activity?',\n00025|     description: 'Consider activities like walking, climbing stairs, or household chores',\n00026|     options: [\n00027|       { value: 'never', label: 'Never', score: 0 },\n00028|       { value: 'rarely', label: 'Rarely (less than 25% of the time)', score: 1 },\n00029|       { value: 'sometimes', label: 'Sometimes (25-50% of the time)', score: 2 },\n00030|       { value: 'often', label: 'Often (50-75% of the time)', score: 3 },\n00031|       { value: 'always', label: 'Always or almost always (more than 75% of the time)', score: 4 }\n00032|     ]\n00033|   },\n00034|   {\n00035|     id: 'mental_frequency',\n00036|     question: 'How often do you experience a worsening of symptoms following mental activity?',\n00037|     description: 'Consider activities like reading, concentrating, or problem-solving',\n00038|     options: [\n00039|       { value: 'never', label: 'Never', score: 0 },\n00040|       { value: 'rarely', label: 'Rarely (less than 25% of the time)', score: 1 },\n00041|       { value: 'sometimes', label: 'Sometimes (25-50% of the time)', score: 2 },\n00042|       { value: 'often', label: 'Often (50-75% of the time)', score: 3 },\n00043|       { value: 'always', label: 'Always or almost always (more than 75% of the time)', score: 4 }\n00044|     ]\n00045|   },\n00046|   {\n00047|     id: 'onset_time',\n00048|     question: 'How soon after activity do your symptoms typically worsen?',\n00049|     options: [\n00050|       { value: 'no_worsening', label: 'No worsening occurs', score: 0 },\n00051|       { value: 'during', label: 'During the activity', score: 2 },\n00052|       { value: 'immediately', label: 'Immediately after (within 30 minutes)', score: 3 },\n00053|       { value: 'hours', label: 'Within a few hours (2-6 hours)', score: 4 },\n00054|       { value: 'next_day', label: 'The next day or later', score: 3 }\n00055|     ]\n00056|   },\n00057|   {\n00058|     id: 'severity',\n00059|     question: 'How severe is the worsening of your symptoms after activity?',\n00060|     options: [\n00061|       { value: 'none', label: 'No worsening', score: 0 },\n00062|       { value: 'mild', label: 'Mild - slightly worse than before activity', score: 1 },\n00063|       { value: 'moderate', label: 'Moderate - noticeably worse, but manageable', score: 2 },\n00064|       { value: 'severe', label: 'Severe - significantly worse, difficult to function', score: 3 },\n00065|       { value: 'very_severe', label: 'Very severe - unable to function, bedridden', score: 4 }\n00066|     ]\n00067|   },\n00068|   {\n00069|     id: 'recovery_time',\n00070|     question: 'How long does it typically take for your symptoms to return to baseline after activity?',\n00071|     options: [\n00072|       { value: 'no_recovery_needed', label: 'No recovery time needed', score: 0 },\n00073|       { value: 'hours', label: 'A few hours', score: 1 },\n00074|       { value: 'one_day', label: 'About one day', score: 2 },\n00075|       { value: 'several_days', label: 'Several days (2-6 days)', score: 3 },\n00076|       { value: 'week_or_more', label: 'A week or more', score: 4 }\n00077|     ]\n00078|   }\n00079| ]\n00080| \n00081| export default function PEMQuest() {\n00082|   const [answers, setAnswers] = useState<Record<string, string>>({})\n00083|   const [currentQuestion, setCurrentQuestion] = useState(0)\n00084|   const [isComplete, setIsComplete] = useState(false)\n00085| \n00086|   const handleAnswer = (questionId: string, value: string) => {\n00087|     setAnswers(prev => ({\n00088|       ...prev,\n00089|       [questionId]: value\n00090|     }))\n00091|   }\n00092| \n00093|   const nextQuestion = () => {\n00094|     if (currentQuestion < pemQuestions.length - 1) {\n00095|       setCurrentQuestion(prev => prev + 1)\n00096|     } else {\n00097|       setIsComplete(true)\n00098|     }\n00099|   }\n00100| \n00101|   const prevQuestion = () => {\n00102|     if (currentQuestion > 0) {\n00103|       setCurrentQuestion(prev => prev - 1)\n00104|     }\n00105|   }\n00106| \n00107|   const calculatePEMScore = () => {\n00108|     const totalScore = pemQuestions.reduce((sum, question) => {\n00109|       const answer = answers[question.id]\n00110|       const option = question.options.find(opt => opt.value === answer)\n00111|       return sum + (option?.score || 0)\n00112|     }, 0)\n00113| \n00114|     const maxScore = pemQuestions.reduce((sum, question) => {\n00115|       return sum + Math.max(...question.options.map(opt => opt.score))\n00116|     }, 0)\n00117| \n00118|     const percentage = (totalScore / maxScore) * 100\n00119| \n00120|     let severity = 'None'\n00121|     let color = 'bg-green-100 text-green-800'\n00122|     \n00123|     if (percentage >= 75) {\n00124|       severity = 'Severe PEM'\n00125|       color = 'bg-red-100 text-red-800'\n00126|     } else if (percentage >= 50) {\n00127|       severity = 'Moderate PEM'\n00128|       color = 'bg-orange-100 text-orange-800'\n00129|     } else if (percentage >= 25) {\n00130|       severity = 'Mild PEM'\n00131|       color = 'bg-yellow-100 text-yellow-800'\n00132|     }\n00133| \n00134|     const isPEMPresent = percentage >= 25\n00135| \n00136|     return {\n00137|       totalScore,\n00138|       maxScore,\n00139|       percentage: Math.round(percentage),\n00140|       severity,\n00141|       color,\n00142|       isPEMPresent\n00143|     }\n00144|   }\n00145| \n00146|   const progress = ((currentQuestion + 1) / pemQuestions.length) * 100\n00147|   const current = pemQuestions[currentQuestion]\n00148|   const currentAnswer = answers[current?.id]\n00149| \n00150|   if (isComplete) {\n00151|     const pemScore = calculatePEMScore()\n00152|     \n00153|     return (\n00154|       <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00155|         <div className=\"container mx-auto px-4 max-w-3xl\">\n00156|           <Card>\n00157|             <CardHeader className=\"text-center\">\n00158|               <CardTitle className=\"flex items-center justify-center gap-2 text-2xl\">\n00159|                 <CheckCircle className=\"h-6 w-6 text-green-600\" />\n00160|                 PEM Assessment Complete\n00161|               </CardTitle>\n00162|               <CardDescription>\n00163|                 Post-Exertional Malaise evaluation based on DePaul criteria\n00164|               </CardDescription>\n00165|             </CardHeader>\n00166|             <CardContent className=\"space-y-6\">\n00167|               <div className=\"text-center\">\n00168|                 <Badge className={`px-4 py-2 text-lg ${pemScore.color}`}>\n00169|                   {pemScore.severity}\n00170|                 </Badge>\n00171|                 <p className=\"text-sm text-gray-600 mt-2\">\n00172|                   Score: {pemScore.totalScore}/{pemScore.maxScore} ({pemScore.percentage}%)\n00173|                 </p>\n00174|               </div>\n00175| \n00176|               <div className=\"grid md:grid-cols-2 gap-6\">\n00177|                 <div className=\"space-y-4\">\n00178|                   <h3 className=\"font-semibold text-lg\">Assessment Results</h3>\n00179|                   \n00180|                   <div className=\"bg-gray-50 p-4 rounded-lg space-y-3\">\n00181|                     {pemQuestions.map((question) => {\n00182|                       const answer = answers[question.id]\n00183|                       const option = question.options.find(opt => opt.value === answer)\n00184|                       return (\n00185|                         <div key={question.id} className=\"border-b border-gray-200 pb-2 last:border-b-0\">\n00186|                           <p className=\"text-sm font-medium text-gray-700 mb-1\">\n00187|                             {question.question}\n00188|                           </p>\n00189|                           <div className=\"flex justify-between items-center\">\n00190|                             <span className=\"text-sm text-gray-600\">{option?.label}</span>\n00191|                             <Badge variant=\"outline\" className=\"text-xs\">\n00192|                               {option?.score} pts\n00193|                             </Badge>\n00194|                           </div>\n00195|                         </div>\n00196|                       )\n00197|                     })}\n00198|                   </div>\n00199|                 </div>\n00200| \n00201|                 <div className=\"space-y-4\">\n00202|                   <h3 className=\"font-semibold text-lg\">Clinical Interpretation</h3>\n00203|                   \n00204|                   <div className=\"bg-blue-50 p-4 rounded-lg\">\n00205|                     <h4 className=\"font-semibold mb-2 text-blue-900\">PEM Status</h4>\n00206|                     <p className=\"text-blue-800 text-sm mb-2\">\n00207|                       {pemScore.isPEMPresent \n00208|                         ? 'Post-Exertional Malaise is likely present'\n00209|                         : 'Post-Exertional Malaise is unlikely'\n00210|                       }\n00211|                     </p>\n00212|                     \n00213|                     {pemScore.isPEMPresent && (\n00214|                       <div className=\"text-blue-800 text-sm space-y-1\">\n00215|                         <p>• PEM is a key diagnostic criterion for ME/CFS</p>\n00216|                         <p>• Consider activity pacing and energy management</p>\n00217|                         <p>• Avoid graded exercise therapy (GET)</p>\n00218|                       </div>\n00219|                     )}\n00220|                   </div>\n00221| \n00222|                   <div className=\"bg-yellow-50 p-4 rounded-lg\">\n00223|                     <h4 className=\"font-semibold mb-2 text-yellow-900\">Recommendations</h4>\n00224|                     <div className=\"text-yellow-800 text-sm space-y-1\">\n00225|                       {pemScore.severity === 'Severe PEM' && (\n00226|                         <>\n00227|                           <p>• Strict activity pacing essential</p>\n00228|                           <p>• Consider disability evaluation</p>\n00229|                           <p>• Specialist ME/CFS clinic referral</p>\n00230|                         </>\n00231|                       )}\n00232|                       {pemScore.severity === 'Moderate PEM' && (\n00233|                         <>\n00234|                           <p>• Implement careful activity pacing</p>\n00235|                           <p>• Monitor for symptom progression</p>\n00236|                           <p>• Consider occupational therapy</p>\n00237|                         </>\n00238|                       )}\n00239|                       {pemScore.severity === 'Mild PEM' && (\n00240|                         <>\n00241|                           <p>• Begin gentle activity pacing</p>\n00242|                           <p>• Education on PEM recognition</p>\n00243|                           <p>• Regular symptom monitoring</p>\n00244|                         </>\n00245|                       )}\n00246|                       {pemScore.severity === 'None' && (\n00247|                         <>\n00248|                           <p>• PEM not significantly present</p>\n00249|                           <p>• Consider other diagnoses</p>\n00250|                           <p>• Standard activity as tolerated</p>\n00251|                         </>\n00252|                       )}\n00253|                     </div>\n00254|                   </div>\n00255|                 </div>\n00256|               </div>\n00257| \n00258|               <Alert>\n00259|                 <Activity className=\"h-4 w-4\" />\n00260|                 <AlertDescription>\n00261|                   <strong>Important:</strong> PEM is the hallmark symptom of ME/CFS. If present, \n00262|                   avoid activities that consistently trigger symptom worsening. Energy management \n00263|                   and pacing are key treatment strategies.\n00264|                 </AlertDescription>\n00265|               </Alert>\n00266| \n00267|               <div className=\"flex gap-4 justify-center\">\n00268|                 <Button onClick={() => {\n00269|                   setAnswers({})\n00270|                   setCurrentQuestion(0)\n00271|                   setIsComplete(false)\n00272|                 }} variant=\"outline\">\n00273|                   Retake Assessment\n00274|                 </Button>\n00275|                 <Button asChild>\n00276|                   <Link href=\"/criteria-engine\">\n00277|                     Continue to Criteria Engine\n00278|                   </Link>\n00279|                 </Button>\n00280|               </div>\n00281|             </CardContent>\n00282|           </Card>\n00283|         </div>\n00284|       </div>\n00285|     )\n00286|   }\n00287| \n00288|   return (\n00289|     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00290|       <div className=\"container mx-auto px-4 max-w-3xl\">\n00291|         <div className=\"mb-6\">\n00292|           <Link href=\"/\" className=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 mb-4\">\n00293|             <ArrowLeft className=\"h-4 w-4\" />\n00294|             Back to Dashboard\n00295|           </Link>\n00296|           \n00297|           <div className=\"flex items-center gap-4 mb-4\">\n00298|             <Activity className=\"h-5 w-5 text-orange-600\" />\n00299|             <div>\n00300|               <h1 className=\"text-2xl font-bold text-gray-900\">PEM-Quest Assessment</h1>\n00301|               <p className=\"text-gray-600\">Post-Exertional Malaise evaluation - 5 validated questions</p>\n00302|             </div>\n00303|           </div>\n00304|           \n00305|           <Progress value={progress} className=\"h-2\" />\n00306|           <p className=\"text-sm text-gray-600 mt-2\">\n00307|             Question {currentQuestion + 1} of {pemQuestions.length}\n00308|           </p>\n00309|         </div>\n00310| \n00311|         <Card>\n00312|           <CardHeader>\n00313|             <CardTitle className=\"text-lg\">\n00314|               {current.question}\n00315|             </CardTitle>\n00316|             {current.description && (\n00317|               <CardDescription>\n00318|                 {current.description}\n00319|               </CardDescription>\n00320|             )}\n00321|           </CardHeader>\n00322|           <CardContent>\n00323|             <div className=\"space-y-6\">\n00324|               <RadioGroup \n00325|                 value={currentAnswer || ''} \n00326|                 onValueChange={(value) => handleAnswer(current.id, value)}\n00327|                 className=\"space-y-3\"\n00328|               >\n00329|                 {current.options.map((option) => (\n00330|                   <div key={option.value} className=\"flex items-start space-x-3 p-3 rounded-lg border hover:bg-gray-50\">\n00331|                     <RadioGroupItem value={option.value} id={option.value} className=\"mt-1\" />\n00332|                     <div className=\"flex-1\">\n00333|                       <Label htmlFor={option.value} className=\"cursor-pointer font-medium\">\n00334|                         {option.label}\n00335|                       </Label>\n00336|                       <div className=\"flex justify-between items-center mt-1\">\n00337|                         <Badge variant=\"outline\" className=\"text-xs\">\n00338|                           {option.score} {option.score === 1 ? 'point' : 'points'}\n00339|                         </Badge>\n00340|                       </div>\n00341|                     </div>\n00342|                   </div>\n00343|                 ))}\n00344|               </RadioGroup>\n00345| \n00346|               <div className=\"flex justify-between pt-6\">\n00347|                 <Button \n00348|                   onClick={prevQuestion} \n00349|                   disabled={currentQuestion === 0}\n00350|                   variant=\"outline\"\n00351|                   className=\"flex items-center gap-2\"\n00352|                 >\n00353|                   <ArrowLeft className=\"h-4 w-4\" />\n00354|                   Previous\n00355|                 </Button>\n00356|                 \n00357|                 <Button \n00358|                   onClick={nextQuestion}\n00359|                   disabled={!currentAnswer}\n00360|                   className=\"flex items-center gap-2\"\n00361|                 >\n00362|                   {currentQuestion === pemQuestions.length - 1 ? 'Complete Assessment' : 'Next Question'}\n00363|                   <ArrowRight className=\"h-4 w-4\" />\n00364|                 </Button>\n00365|               </div>\n00366|             </div>\n00367|           </CardContent>\n00368|         </Card>\n00369| \n00370|         <div className=\"mt-6\">\n00371|           <Card className=\"border-orange-200 bg-orange-50\">\n00372|             <CardContent className=\"pt-4\">\n00373|               <div className=\"flex items-start gap-3\">\n00374|                 <TrendingDown className=\"h-5 w-5 text-orange-600 mt-1\" />\n00375|                 <div className=\"text-sm text-orange-800\">\n00376|                   <h4 className=\"font-semibold mb-1\">About Post-Exertional Malaise (PEM)</h4>\n00377|                   <p>\n00378|                     PEM is the worsening of symptoms following physical or mental activity that \n00379|                     was previously tolerated. It's a key feature of ME/CFS and often occurs \n00380|                     in Long COVID. Symptoms may be delayed and can last days to weeks.\n00381|                   </p>\n00382|                 </div>\n00383|               </div>\n00384|             </CardContent>\n00385|           </Card>\n00386|         </div>\n00387|       </div>\n00388|     </div>\n00389|   )\n00390| }\n</file>",
    "metadata": {
      "preview": "'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\nimport { Label } from '@/components/ui/label'\nimport { Progress } from '@/components/ui/progress'\nimport { Badge } from '@/components/ui/badge'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { ArrowLeft, ArrowRight, Activity, Clock, TrendingDown, CheckCircle } from 'lucide-react'\nimport Link from 'next/link'\n\ninterface PEMQuestion {\n  id: string\n  question: string\n  description?: string\n  options: { value: string; label: string; score: number }[]\n}\n"
    },
    "title": "app/pem-quest/page.tsx",
    "time": {
      "start": 1758128169799,
      "end": 1758128169802
    }
  }
}