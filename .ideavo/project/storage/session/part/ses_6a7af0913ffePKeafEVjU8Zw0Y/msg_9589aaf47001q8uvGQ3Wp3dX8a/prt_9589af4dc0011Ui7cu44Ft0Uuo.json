{
  "id": "prt_9589af4dc0011Ui7cu44Ft0Uuo",
  "messageID": "msg_9589aaf47001q8uvGQ3Wp3dX8a",
  "sessionID": "ses_6a7af0913ffePKeafEVjU8Zw0Y",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_014TFqppNAVnQgLqHWEAVStf",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/subtype-advisor/page.tsx"
    },
    "output": "<file>\n00001| 'use client'\n00002| \n00003| import { useState } from 'react'\n00004| import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\n00005| import { Button } from '@/components/ui/button'\n00006| import { Checkbox } from '@/components/ui/checkbox'\n00007| import { Badge } from '@/components/ui/badge'\n00008| import { Alert, AlertDescription } from '@/components/ui/alert'\n00009| import { Input } from '@/components/ui/input'\n00010| import { Label } from '@/components/ui/label'\n00011| import { ArrowLeft, Users, Pill, Heart, Droplets, Activity, Brain, Shield, Download } from 'lucide-react'\n00012| import Link from 'next/link'\n00013| \n00014| interface POTSSubtype {\n00015|   id: string\n00016|   name: string\n00017|   description: string\n00018|   icon: any\n00019|   color: string\n00020|   criteria: { id: string; description: string; checked: boolean }[]\n00021|   treatments: {\n00022|     nonPharmacological: string[]\n00023|     firstLine: string[]\n00024|     secondLine: string[]\n00025|   }\n00026| }\n00027| \n00028| const potsSubtypes: POTSSubtype[] = [\n00029|   {\n00030|     id: 'hypovolemic',\n00031|     name: 'Hypovolemic POTS',\n00032|     description: 'Low blood volume causing orthostatic intolerance',\n00033|     icon: Droplets,\n00034|     color: 'blue',\n00035|     criteria: [\n00036|       { id: 'low_bp', description: 'Low-normal blood pressure (<110/70)', checked: false },\n00037|       { id: 'thirst', description: 'Excessive thirst', checked: false },\n00038|       { id: 'salt_craving', description: 'Salt craving', checked: false },\n00039|       { id: 'volume_depletion', description: 'Signs of volume depletion', checked: false },\n00040|       { id: 'renin_high', description: 'Elevated renin/aldosterone (if available)', checked: false }\n00041|     ],\n00042|     treatments: {\n00043|       nonPharmacological: [\n00044|         'Increase fluid intake to 2.5-3L daily',\n00045|         'Increase sodium intake to 8-10g daily',\n00046|         'Compression garments (30-40 mmHg)',\n00047|         'Gradual exercise reconditioning'\n00048|       ],\n00049|       firstLine: [\n00050|         'Fludrocortisone 0.1-0.2mg daily',\n00051|         'Salt tablets if dietary intake insufficient'\n00052|       ],\n00053|       secondLine: [\n00054|         'Desmopressin (DDAVP) for severe cases',\n00055|         'Erythropoietin if anemic'\n00056|       ]\n00057|     }\n00058|   },\n00059|   {\n00060|     id: 'neuropathic',\n00061|     name: 'Neuropathic POTS',\n00062|     description: 'Peripheral autonomic neuropathy affecting blood vessel control',\n00063|     icon: Brain,\n00064|     color: 'purple',\n00065|     criteria: [\n00066|       { id: 'distal_neuropathy', description: 'Distal small fiber neuropathy symptoms', checked: false },\n00067|       { id: 'gi_dysfunction', description: 'GI dysfunction (gastroparesis, constipation)', checked: false },\n00068|       { id: 'anhidrosis', description: 'Anhidrosis or reduced sweating', checked: false },\n00069|       { id: 'pupil_abnormal', description: 'Pupillary abnormalities', checked: false },\n00070|       { id: 'diabetes_autoimmune', description: 'History of diabetes or autoimmune disease', checked: false }\n00071|     ],\n00072|     treatments: {\n00073|       nonPharmacological: [\n00074|         'Compression garments',\n00075|         'Leg elevation',\n00076|         'Avoid heat exposure',\n00077|         'Small frequent meals'\n00078|       ],\n00079|       firstLine: [\n00080|         'Midodrine 2.5-10mg TID',\n00081|         'Pyridostigmine 30-60mg TID'\n00082|       ],\n00083|       secondLine: [\n00084|         'Droxidopa (if available)',\n00085|         'Alpha-lipoic acid for neuropathy',\n00086|         'IVIG for autoimmune cases'\n00087|       ]\n00088|     }\n00089|   },\n00090|   {\n00091|     id: 'hyperadrenergic',\n00092|     name: 'Hyperadrenergic POTS',\n00093|     description: 'Excessive sympathetic nervous system activation',\n00094|     icon: Activity,\n00095|     color: 'red',\n00096|     criteria: [\n00097|       { id: 'high_bp', description: 'Hypertension when standing', checked: false },\n00098|       { id: 'anxiety_panic', description: 'Anxiety, panic attacks, tremor', checked: false },\n00099|       { id: 'migraine', description: 'Migraine headaches', checked: false },\n00100|       { id: 'cold_hands', description: 'Cold hands and feet', checked: false },\n00101|       { id: 'norepinephrine_high', description: 'Elevated standing norepinephrine >600 pg/mL', checked: false }\n00102|     ],\n00103|     treatments: {\n00104|       nonPharmacological: [\n00105|         'Stress reduction techniques',\n00106|         'Avoid stimulants (caffeine)',\n00107|         'Regular sleep schedule',\n00108|         'Gentle exercise'\n00109|       ],\n00110|       firstLine: [\n00111|         'Propranolol 10-40mg BID',\n00112|         'Clonidine 0.1-0.2mg BID'\n00113|       ],\n00114|       secondLine: [\n00115|         'Ivabradine 2.5-7.5mg BID',\n00116|         'Methyldopa',\n00117|         'Labetalol for hypertension'\n00118|       ]\n00119|     }\n00120|   },\n00121|   {\n00122|     id: 'autoimmune',\n00123|     name: 'Autoimmune POTS',\n00124|     description: 'Autoimmune-mediated autonomic dysfunction',\n00125|     icon: Shield,\n00126|     color: 'green',\n00127|     criteria: [\n00128|       { id: 'autoimmune_history', description: 'Personal/family history of autoimmune disease', checked: false },\n00129|       { id: 'rapid_onset', description: 'Rapid onset of symptoms', checked: false },\n00130|       { id: 'viral_trigger', description: 'Viral illness trigger (EBV, COVID, etc.)', checked: false },\n00131|       { id: 'antibodies', description: 'Positive autonomic antibodies (if tested)', checked: false },\n00132|       { id: 'other_autoimmune', description: 'Other autoimmune markers positive', checked: false }\n00133|     ],\n00134|     treatments: {\n00135|       nonPharmacological: [\n00136|         'Standard POTS measures',\n00137|         'Avoid infection triggers',\n00138|         'Stress management',\n00139|         'Anti-inflammatory diet'\n00140|       ],\n00141|       firstLine: [\n00142|         'Standard POTS medications',\n00143|         'Trial of corticosteroids'\n00144|       ],\n00145|       secondLine: [\n00146|         'IVIG therapy',\n00147|         'Immunosuppressive agents',\n00148|         'Plasmapheresis for severe cases'\n00149|       ]\n00150|     }\n00151|   }\n00152| ]\n00153| \n00154| export default function SubtypeAdvisor() {\n00155|   const [subtypeData, setSubtypeData] = useState(potsSubtypes.map(s => ({ ...s })))\n00156|   const [patientAge, setPatientAge] = useState<number | null>(null)\n00157|   const [comorbidities, setComorbidities] = useState<string[]>([])\n00158|   const [isComplete, setIsComplete] = useState(false)\n00159| \n00160|   const handleCriteriaChange = (subtypeId: string, criteriaId: string, checked: boolean) => {\n00161|     setSubtypeData(prev => prev.map(subtype => \n00162|       subtype.id === subtypeId \n00163|         ? {\n00164|             ...subtype,\n00165|             criteria: subtype.criteria.map(c => \n00166|               c.id === criteriaId ? { ...c, checked } : c\n00167|             )\n00168|           }\n00169|         : subtype\n00170|     ))\n00171|   }\n00172| \n00173|   const calculateSubtypeScores = () => {\n00174|     return subtypeData.map(subtype => {\n00175|       const score = subtype.criteria.filter(c => c.checked).length\n00176|       const maxScore = subtype.criteria.length\n00177|       const percentage = (score / maxScore) * 100\n00178|       \n00179|       return {\n00180|         ...subtype,\n00181|         score,\n00182|         maxScore,\n00183|         percentage: Math.round(percentage),\n00184|         likelihood: percentage >= 60 ? 'high' : percentage >= 40 ? 'medium' : 'low'\n00185|       }\n00186|     }).sort((a, b) => b.percentage - a.percentage)\n00187|   }\n00188| \n00189|   const generateTreatmentPlan = () => {\n00190|     const scores = calculateSubtypeScores()\n00191|     const primarySubtype = scores[0]\n00192|     const secondarySubtypes = scores.filter(s => s.percentage >= 40 && s.id !== primarySubtype.id)\n00193|     \n00194|     let plan = \"POTS Subtype & Treatment Plan\\n\"\n00195|     plan += \"=============================\\n\\n\"\n00196|     \n00197|     plan += \"SUBTYPE ANALYSIS:\\n\"\n00198|     plan += `Primary: ${primarySubtype.name} (${primarySubtype.percentage}% likelihood)\\n`\n00199|     if (secondarySubtypes.length > 0) {\n00200|       plan += \"Secondary considerations:\\n\"\n00201|       secondarySubtypes.forEach(s => {\n00202|         plan += `  • ${s.name} (${s.percentage}% likelihood)\\n`\n00203|       })\n00204|     }\n00205|     plan += \"\\n\"\n00206|     \n00207|     plan += \"TREATMENT RECOMMENDATIONS:\\n\\n\"\n00208|     plan += \"Non-Pharmacological:\\n\"\n00209|     primarySubtype.treatments.nonPharmacological.forEach(treatment => {\n00210|       plan += `  • ${treatment}\\n`\n00211|     })\n00212|     plan += \"\\n\"\n00213|     \n00214|     plan += \"First-Line Medications:\\n\"\n00215|     primarySubtype.treatments.firstLine.forEach(treatment => {\n00216|       plan += `  • ${treatment}\\n`\n00217|     })\n00218|     plan += \"\\n\"\n00219|     \n00220|     plan += \"Second-Line Options:\\n\"\n00221|     primarySubtype.treatments.secondLine.forEach(treatment => {\n00222|       plan += `  • ${treatment}\\n`\n00223|     })\n00224|     \n00225|     return plan\n00226|   }\n00227| \n00228|   if (isComplete) {\n00229|     const scores = calculateSubtypeScores()\n00230|     const primarySubtype = scores[0]\n00231|     const secondarySubtypes = scores.filter(s => s.percentage >= 40 && s.id !== primarySubtype.id)\n00232|     \n00233|     return (\n00234|       <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00235|         <div className=\"container mx-auto px-4 max-w-5xl\">\n00236|           <Card>\n00237|             <CardHeader className=\"text-center\">\n00238|               <CardTitle className=\"flex items-center justify-center gap-2 text-2xl\">\n00239|                 <Users className=\"h-6 w-6 text-blue-600\" />\n00240|                 POTS Subtype Analysis Complete\n00241|               </CardTitle>\n00242|               <CardDescription>\n00243|                 Personalized treatment recommendations based on subtype assessment\n00244|               </CardDescription>\n00245|             </CardHeader>\n00246|             <CardContent className=\"space-y-6\">\n00247|               <div className=\"text-center\">\n00248|                 <Badge className={`px-4 py-2 text-lg bg-${primarySubtype.color}-100 text-${primarySubtype.color}-800`}>\n00249|                   Primary: {primarySubtype.name}\n00250|                 </Badge>\n00251|                 <p className=\"text-sm text-gray-600 mt-2\">\n00252|                   {primarySubtype.percentage}% likelihood ({primarySubtype.score}/{primarySubtype.maxScore} criteria)\n00253|                 </p>\n00254|               </div>\n00255| \n00256|               <div className=\"grid md:grid-cols-2 gap-6\">\n00257|                 <Card className={`border-${primarySubtype.color}-200`}>\n00258|                   <CardHeader className=\"pb-3\">\n00259|                     <CardTitle className={`text-lg text-${primarySubtype.color}-800 flex items-center gap-2`}>\n00260|                       <primarySubtype.icon className=\"h-5 w-5\" />\n00261|                       {primarySubtype.name}\n00262|                     </CardTitle>\n00263|                     <CardDescription>{primarySubtype.description}</CardDescription>\n00264|                   </CardHeader>\n00265|                   <CardContent>\n00266|                     <div className=\"space-y-2\">\n00267|                       <h4 className=\"font-semibold text-sm\">Criteria Met:</h4>\n00268|                       {primarySubtype.criteria.filter(c => c.checked).map((criterion, index) => (\n00269|                         <div key={index} className=\"text-sm flex items-center gap-2\">\n00270|                           <span className=\"text-green-600\">✓</span>\n00271|                           {criterion.description}\n00272|                         </div>\n00273|                       ))}\n00274|                     </div>\n00275|                   </CardContent>\n00276|                 </Card>\n00277| \n00278|                 <div className=\"space-y-4\">\n00279|                   <h3 className=\"font-semibold text-lg\">All Subtype Scores</h3>\n00280|                   {scores.map((subtype) => (\n00281|                     <div key={subtype.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n00282|                       <div className=\"flex items-center gap-2\">\n00283|                         <subtype.icon className=\"h-4 w-4\" />\n00284|                         <span className=\"text-sm font-medium\">{subtype.name}</span>\n00285|                       </div>\n00286|                       <div className=\"flex items-center gap-2\">\n00287|                         <Badge variant={subtype.likelihood === 'high' ? 'default' : 'secondary'} className=\"text-xs\">\n00288|                           {subtype.percentage}%\n00289|                         </Badge>\n00290|                         <span className=\"text-xs text-gray-600\">\n00291|                           {subtype.score}/{subtype.maxScore}\n00292|                         </span>\n00293|                       </div>\n00294|                     </div>\n00295|                   ))}\n00296|                 </div>\n00297|               </div>\n00298| \n00299|               <div className=\"grid md:grid-cols-3 gap-4\">\n00300|                 <Card className=\"border-green-200 bg-green-50\">\n00301|                   <CardHeader className=\"pb-3\">\n00302|                     <CardTitle className=\"text-lg text-green-800 flex items-center gap-2\">\n00303|                       <Activity className=\"h-5 w-5\" />\n00304|                       Non-Pharmacological\n00305|                     </CardTitle>\n00306|                   </CardHeader>\n00307|                   <CardContent>\n00308|                     <ul className=\"space-y-2 text-sm\">\n00309|                       {primarySubtype.treatments.nonPharmacological.map((treatment, index) => (\n00310|                         <li key={index} className=\"flex items-start gap-2\">\n00311|                           <span className=\"text-green-600 mt-1\">•</span>\n00312|                           {treatment}\n00313|                         </li>\n00314|                       ))}\n00315|                     </ul>\n00316|                   </CardContent>\n00317|                 </Card>\n00318| \n00319|                 <Card className=\"border-blue-200 bg-blue-50\">\n00320|                   <CardHeader className=\"pb-3\">\n00321|                     <CardTitle className=\"text-lg text-blue-800 flex items-center gap-2\">\n00322|                       <Pill className=\"h-5 w-5\" />\n00323|                       First-Line Rx\n00324|                     </CardTitle>\n00325|                   </CardHeader>\n00326|                   <CardContent>\n00327|                     <ul className=\"space-y-2 text-sm\">\n00328|                       {primarySubtype.treatments.firstLine.map((treatment, index) => (\n00329|                         <li key={index} className=\"flex items-start gap-2\">\n00330|                           <span className=\"text-blue-600 mt-1\">•</span>\n00331|                           {treatment}\n00332|                         </li>\n00333|                       ))}\n00334|                     </ul>\n00335|                   </CardContent>\n00336|                 </Card>\n00337| \n00338|                 <Card className=\"border-purple-200 bg-purple-50\">\n00339|                   <CardHeader className=\"pb-3\">\n00340|                     <CardTitle className=\"text-lg text-purple-800 flex items-center gap-2\">\n00341|                       <Heart className=\"h-5 w-5\" />\n00342|                       Second-Line Options\n00343|                     </CardTitle>\n00344|                   </CardHeader>\n00345|                   <CardContent>\n00346|                     <ul className=\"space-y-2 text-sm\">\n00347|                       {primarySubtype.treatments.secondLine.map((treatment, index) => (\n00348|                         <li key={index} className=\"flex items-start gap-2\">\n00349|                           <span className=\"text-purple-600 mt-1\">•</span>\n00350|                           {treatment}\n00351|                         </li>\n00352|                       ))}\n00353|                     </ul>\n00354|                   </CardContent>\n00355|                 </Card>\n00356|               </div>\n00357| \n00358|               {secondarySubtypes.length > 0 && (\n00359|                 <Alert className=\"border-yellow-200 bg-yellow-50\">\n00360|                   <Shield className=\"h-4 w-4 text-yellow-600\" />\n00361|                   <AlertDescription className=\"text-yellow-800\">\n00362|                     <strong>Mixed Subtype Considerations:</strong> This patient also shows features of{' '}\n00363|                     {secondarySubtypes.map(s => s.name).join(' and ')}. Consider combination therapy approaches \n00364|                     and monitor response to initial treatment.\n00365|                   </AlertDescription>\n00366|                 </Alert>\n00367|               )}\n00368| \n00369|               <div className=\"bg-gray-50 p-4 rounded-lg\">\n00370|                 <h4 className=\"font-semibold mb-2\">Clinical Pearls</h4>\n00371|                 <div className=\"text-sm space-y-2\">\n00372|                   <p>• Start with non-pharmacological interventions for all POTS subtypes</p>\n00373|                   <p>• Begin medications at low doses and titrate slowly</p>\n00374|                   <p>• Monitor response and adjust treatment based on symptom improvement</p>\n00375|                   <p>• Consider specialist referral for complex cases or treatment failures</p>\n00376|                   <p>• Re-assess subtype if treatment response is poor</p>\n00377|                 </div>\n00378|               </div>\n00379| \n00380|               <div className=\"flex gap-4 justify-center\">\n00381|                 <Button onClick={() => {\n00382|                   setSubtypeData(potsSubtypes.map(s => ({ ...s })))\n00383|                   setIsComplete(false)\n00384|                 }} variant=\"outline\">\n00385|                   Reassess Subtype\n00386|                 </Button>\n00387|                 <Button onClick={() => {\n00388|                   const plan = generateTreatmentPlan()\n00389|                   const blob = new Blob([plan], { type: 'text/plain' })\n00390|                   const url = URL.createObjectURL(blob)\n00391|                   const a = document.createElement('a')\n00392|                   a.href = url\n00393|                   a.download = 'pots-treatment-plan.txt'\n00394|                   a.click()\n00395|                   URL.revokeObjectURL(url)\n00396|                 }} className=\"flex items-center gap-2\">\n00397|                   <Download className=\"h-4 w-4\" />\n00398|                   Download Treatment Plan\n00399|                 </Button>\n00400|               </div>\n00401|             </CardContent>\n00402|           </Card>\n00403|         </div>\n00404|       </div>\n00405|     )\n00406|   }\n00407| \n00408|   return (\n00409|     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00410|       <div className=\"container mx-auto px-4 max-w-5xl\">\n00411|         <div className=\"mb-6\">\n00412|           <Link href=\"/\" className=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 mb-4\">\n00413|             <ArrowLeft className=\"h-4 w-4\" />\n00414|             Back to Dashboard\n00415|           </Link>\n00416|           \n00417|           <div className=\"flex items-center gap-4 mb-4\">\n00418|             <Users className=\"h-5 w-5 text-blue-600\" />\n00419|             <div>\n00420|               <h1 className=\"text-2xl font-bold text-gray-900\">POTS Subtype & Treatment Advisor</h1>\n00421|               <p className=\"text-gray-600\">Determine POTS subtype for personalized treatment recommendations</p>\n00422|             </div>\n00423|           </div>\n00424|         </div>\n00425| \n00426|         <div className=\"space-y-6\">\n00427|           <Card>\n00428|             <CardHeader>\n00429|               <CardTitle>Patient Information</CardTitle>\n00430|               <CardDescription>Basic patient details for treatment planning</CardDescription>\n00431|             </CardHeader>\n00432|             <CardContent>\n00433|               <div className=\"grid md:grid-cols-2 gap-4\">\n00434|                 <div>\n00435|                   <Label htmlFor=\"age\">Patient Age</Label>\n00436|                   <Input\n00437|                     id=\"age\"\n00438|                     type=\"number\"\n00439|                     placeholder=\"25\"\n00440|                     value={patientAge || ''}\n00441|                     onChange={(e) => setPatientAge(parseInt(e.target.value) || null)}\n00442|                   />\n00443|                 </div>\n00444|                 <div>\n00445|                   <Label>Relevant Comorbidities (check all that apply)</Label>\n00446|                   <div className=\"flex gap-4 mt-2\">\n00447|                     {['Diabetes', 'Autoimmune disease', 'EDS', 'MCAS'].map((condition) => (\n00448|                       <div key={condition} className=\"flex items-center space-x-2\">\n00449|                         <Checkbox\n00450|                           id={condition}\n00451|                           checked={comorbidities.includes(condition)}\n00452|                           onCheckedChange={(checked) => {\n00453|                             if (checked) {\n00454|                               setComorbidities(prev => [...prev, condition])\n00455|                             } else {\n00456|                               setComorbidities(prev => prev.filter(c => c !== condition))\n00457|                             }\n00458|                           }}\n00459|                         />\n00460|                         <Label htmlFor={condition} className=\"text-sm\">{condition}</Label>\n00461|                       </div>\n00462|                     ))}\n00463|                   </div>\n00464|                 </div>\n00465|               </div>\n00466|             </CardContent>\n00467|           </Card>\n00468| \n00469|           {subtypeData.map((subtype) => (\n00470|             <Card key={subtype.id} className={`border-${subtype.color}-200`}>\n00471|               <CardHeader>\n00472|                 <CardTitle className={`text-lg text-${subtype.color}-800 flex items-center gap-2`}>\n00473|                   <subtype.icon className=\"h-5 w-5\" />\n00474|                   {subtype.name}\n00475|                 </CardTitle>\n00476|                 <CardDescription>{subtype.description}</CardDescription>\n00477|               </CardHeader>\n00478|               <CardContent>\n00479|                 <div className=\"space-y-3\">\n00480|                   {subtype.criteria.map((criterion) => (\n00481|                     <div key={criterion.id} className=\"flex items-start space-x-3 p-3 rounded-lg border hover:bg-gray-50\">\n00482|                       <Checkbox\n00483|                         id={`${subtype.id}-${criterion.id}`}\n00484|                         checked={criterion.checked}\n00485|                         onCheckedChange={(checked) => handleCriteriaChange(subtype.id, criterion.id, !!checked)}\n00486|                       />\n00487|                       <Label htmlFor={`${subtype.id}-${criterion.id}`} className=\"cursor-pointer text-sm flex-1\">\n00488|                         {criterion.description}\n00489|                       </Label>\n00490|                     </div>\n00491|                   ))}\n00492|                 </div>\n00493|                 \n00494|                 <div className=\"mt-4 p-3 bg-gray-50 rounded-lg\">\n00495|                   <div className=\"text-sm text-gray-600\">\n00496|                     <strong>Score:</strong> {subtype.criteria.filter(c => c.checked).length}/{subtype.criteria.length} criteria met\n00497|                   </div>\n00498|                 </div>\n00499|               </CardContent>\n00500|             </Card>\n00501|           ))}\n00502| \n00503|           <div className=\"flex justify-center\">\n00504|             <Button onClick={() => setIsComplete(true)} size=\"lg\" className=\"px-8\">\n00505|               <Pill className=\"h-4 w-4 mr-2\" />\n00506|               Generate Treatment Recommendations\n00507|             </Button>\n00508|           </div>\n00509|         </div>\n00510|       </div>\n00511|     </div>\n00512|   )\n00513| }\n</file>",
    "metadata": {
      "preview": "'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { Badge } from '@/components/ui/badge'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { ArrowLeft, Users, Pill, Heart, Droplets, Activity, Brain, Shield, Download } from 'lucide-react'\nimport Link from 'next/link'\n\ninterface POTSSubtype {\n  id: string\n  name: string\n  description: string\n  icon: any\n  color: string\n  criteria: { id: string; description: string; checked: boolean }[]"
    },
    "title": "app/subtype-advisor/page.tsx",
    "time": {
      "start": 1758128175008,
      "end": 1758128175011
    }
  }
}