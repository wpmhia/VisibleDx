{
  "id": "prt_9711e210c001OtY44b82WgyB7z",
  "messageID": "msg_9711b80a5001bVZPJ0r9XNFluA",
  "sessionID": "ses_6a7af0913ffePKeafEVjU8Zw0Y",
  "type": "tool",
  "tool": "edit",
  "callID": "toolu_01FQBNkTE4xTnX6DZ97Bdmj6",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/case-analyzer/page.tsx",
      "oldString": "          {/* Results Section */}\n          <div className=\"space-y-6\">\n            {analysisResult ? (\n              <>\n                {/* Overall Assessment */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <CheckCircle className=\"h-5 w-5\" />\n                      ME/CFS Likelihood Assessment\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div className=\"text-center\">\n                        <div className=\"text-3xl font-bold mb-2\">{analysisResult.overallScore}%</div>\n                        <Badge className={`text-sm ${getLikelihoodColor(analysisResult.mecfsLikelihood)}`}>\n                          {getLikelihoodText(analysisResult.mecfsLikelihood)}\n                        </Badge>\n                      </div>\n                      \n                      <Progress value={analysisResult.overallScore} className=\"h-3\" />\n                      \n                      {analysisResult.redFlags.length > 0 && (\n                        <Alert className=\"border-red-200 bg-red-50\">\n                          <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n                          <AlertDescription className=\"text-red-800\">\n                            <strong>Red Flags Detected:</strong> {analysisResult.redFlags.join(', ')}\n                          </AlertDescription>\n                        </Alert>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* NICE NG206 Criteria Assessment */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Brain className=\"h-5 w-5\" />\n                      NICE NG206 Criteria Assessment\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      {[\n                        { key: 'debilitatingFatigue', label: 'Debilitating fatigue' },\n                        { key: 'postExertionalMalaise', label: 'Post-exertional malaise' },\n                        { key: 'unrefreshingSleep', label: 'Unrefreshing sleep' },\n                        { key: 'cognitiveDifficulties', label: 'Cognitive difficulties' },\n                        { key: 'duration', label: 'Duration â‰¥3 months' }\n                      ].map(({ key, label }) => (\n                        <div key={key} className=\"flex items-center gap-2\">\n                          {analysisResult.criteriaAssessment[key as keyof typeof analysisResult.criteriaAssessment] ? (\n                            <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                          ) : (\n                            <div className=\"w-4 h-4 rounded-full border-2 border-gray-300\" />\n                          )}\n                          <span className={`text-sm ${\n                            analysisResult.criteriaAssessment[key as keyof typeof analysisResult.criteriaAssessment] \n                              ? 'text-green-800 font-medium' \n                              : 'text-gray-600'\n                          }`}>\n                            {label}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* PEM Assessment */}\n                {analysisResult.pemIndicators.present && (\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Activity className=\"h-5 w-5\" />\n                        Post-Exertional Malaise\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-2\">\n                        <Badge variant=\"outline\" className=\"capitalize\">\n                          {analysisResult.pemIndicators.severity} severity\n                        </Badge>\n                        <div className=\"text-sm text-gray-600\">\n                          <strong>Evidence found:</strong>\n                          <ul className=\"list-disc list-inside mt-1\">\n                            {analysisResult.pemIndicators.evidence.map((evidence, idx) => (\n                              <li key={idx}>{evidence}</li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* Key Findings */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Heart className=\"h-5 w-5\" />\n                      Key Clinical Findings\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-2\">\n                      {analysisResult.keyFindings.map((finding, idx) => (\n                        <div key={idx} className=\"flex items-start gap-2\">\n                          <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5 flex-shrink-0\" />\n                          <span className=\"text-sm\">{finding}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Recommendations */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Clinical Recommendations</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-2\">\n                      {analysisResult.recommendations.map((rec, idx) => (\n                        <div key={idx} className=\"flex items-start gap-2\">\n                          <span className=\"text-blue-600 mt-1\">â€¢</span>\n                          <span className=\"text-sm\">{rec}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Differential Diagnoses */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Consider Alternative Diagnoses</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      {analysisResult.differentialDiagnoses.map((diagnosis, idx) => (\n                        <Badge key={idx} variant=\"outline\" className=\"text-xs\">\n                          {diagnosis}\n                        </Badge>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </>\n            ) : (\n              <Card>\n                <CardContent className=\"text-center py-12\">\n                  <FileText className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-semibold text-gray-600 mb-2\">No Analysis Yet</h3>\n                  <p className=\"text-gray-500\">Enter a patient case and click \"Analyze Case\" to see results</p>\n                </CardContent>\n              </Card>\n            )}\n          </div>",
      "newString": "          {/* Results Section */}\n          <div className=\"space-y-6\">\n            {analysisResult ? (\n              <>\n                {/* Red Flags Alert */}\n                {analysisResult.redFlags.length > 0 && (\n                  <Alert className=\"border-red-200 bg-red-50\">\n                    <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n                    <AlertDescription className=\"text-red-800\">\n                      <strong>ðŸš¨ RED FLAGS DETECTED:</strong> {analysisResult.redFlags.join(', ')}\n                      <br /><strong>Urgent evaluation required before proceeding with complex diagnoses.</strong>\n                    </AlertDescription>\n                  </Alert>\n                )}\n\n                {/* Primary Diagnosis */}\n                {analysisResult.primaryDiagnosis && (\n                  <Card className=\"border-2 border-blue-500 bg-blue-50\">\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2 text-blue-900\">\n                        <CheckCircle className=\"h-5 w-5\" />\n                        Primary Diagnostic Consideration\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"text-lg font-semibold text-blue-900\">\n                        {analysisResult.primaryDiagnosis}\n                      </div>\n                      {analysisResult.secondaryDiagnoses.length > 0 && (\n                        <div className=\"mt-2 text-sm text-blue-800\">\n                          <strong>Also consider:</strong> {analysisResult.secondaryDiagnoses.join(', ')}\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* All Diagnostic Frameworks */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Users className=\"h-5 w-5\" />\n                      Multi-Framework Analysis Results\n                    </CardTitle>\n                    <CardDescription>\n                      Assessment across all available diagnostic criteria\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                      {analysisResult.frameworks.map((framework) => (\n                        <Card key={framework.id} className={`${\n                          framework.likelihood === 'very-high' || framework.likelihood === 'high' \n                            ? 'border-2 border-orange-400 bg-orange-50' \n                            : framework.likelihood === 'moderate' \n                            ? 'border-yellow-300 bg-yellow-50'\n                            : 'border-gray-200'\n                        }`}>\n                          <CardHeader className=\"pb-3\">\n                            <CardTitle className=\"text-sm flex items-center gap-2\">\n                              <framework.icon className=\"h-4 w-4\" />\n                              {framework.name}\n                            </CardTitle>\n                            <div className=\"flex justify-between items-center\">\n                              <Badge className={`text-xs ${getLikelihoodColor(framework.likelihood)}`}>\n                                {getLikelihoodText(framework.likelihood)}\n                              </Badge>\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {framework.score}% â€¢ {framework.confidence}\n                              </Badge>\n                            </div>\n                            <div className=\"text-xs text-gray-600\">\n                              ICD-10: {framework.icdCode}\n                            </div>\n                          </CardHeader>\n                          <CardContent>\n                            <div className=\"space-y-2\">\n                              <Progress value={framework.score} className=\"h-2\" />\n                              \n                              {framework.keyFindings.length > 0 && (\n                                <div>\n                                  <div className=\"text-xs font-medium text-gray-700 mb-1\">Key Findings:</div>\n                                  {framework.keyFindings.map((finding, idx) => (\n                                    <div key={idx} className=\"text-xs text-gray-600 flex items-start gap-1\">\n                                      <CheckCircle className=\"h-3 w-3 text-green-600 mt-0.5 flex-shrink-0\" />\n                                      {finding}\n                                    </div>\n                                  ))}\n                                </div>\n                              )}\n                              \n                              {framework.recommendations.length > 0 && (\n                                <div>\n                                  <div className=\"text-xs font-medium text-gray-700 mb-1\">Recommendations:</div>\n                                  {framework.recommendations.map((rec, idx) => (\n                                    <div key={idx} className=\"text-xs text-blue-700 flex items-start gap-1\">\n                                      <span className=\"text-blue-600 mt-0.5\">â€¢</span>\n                                      {rec}\n                                    </div>\n                                  ))}\n                                </div>\n                              )}\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Overall Key Findings */}\n                {analysisResult.keyFindings.length > 0 && (\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Heart className=\"h-5 w-5\" />\n                        Overall Key Clinical Findings\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"grid md:grid-cols-2 gap-2\">\n                        {analysisResult.keyFindings.map((finding, idx) => (\n                          <div key={idx} className=\"flex items-start gap-2 text-sm\">\n                            <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5 flex-shrink-0\" />\n                            {finding}\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* Overall Recommendations */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Lightbulb className=\"h-5 w-5\" />\n                      Clinical Recommendations\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-2\">\n                      {analysisResult.overallRecommendations.map((rec, idx) => (\n                        <div key={idx} className=\"flex items-start gap-2\">\n                          <span className={`mt-1 ${rec.includes('ðŸš¨') ? 'text-red-600' : 'text-blue-600'}`}>\n                            {rec.includes('ðŸš¨') ? 'ðŸš¨' : 'â€¢'}\n                          </span>\n                          <span className={`text-sm ${rec.includes('ðŸš¨') ? 'text-red-800 font-semibold' : ''}`}>\n                            {rec.replace('ðŸš¨ ', '')}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Next Steps */}\n                <Card className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2 text-blue-900\">\n                      <Activity className=\"h-5 w-5\" />\n                      Suggested Next Steps\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      <div className=\"grid md:grid-cols-3 gap-4\">\n                        <Link href=\"/quick-screen\" \n                          className=\"flex items-center gap-2 p-3 bg-white rounded-lg border hover:shadow-md transition-shadow\">\n                          <Clock className=\"h-4 w-4 text-blue-600\" />\n                          <div>\n                            <div className=\"text-sm font-medium\">Quick Screen</div>\n                            <div className=\"text-xs text-gray-600\">Structured assessment</div>\n                          </div>\n                        </Link>\n                        \n                        <Link href=\"/stand-test\" \n                          className=\"flex items-center gap-2 p-3 bg-white rounded-lg border hover:shadow-md transition-shadow\">\n                          <Heart className=\"h-4 w-4 text-red-600\" />\n                          <div>\n                            <div className=\"text-sm font-medium\">Stand Test</div>\n                            <div className=\"text-xs text-gray-600\">POTS evaluation</div>\n                          </div>\n                        </Link>\n                        \n                        <Link href=\"/criteria-engine\" \n                          className=\"flex items-center gap-2 p-3 bg-white rounded-lg border hover:shadow-md transition-shadow\">\n                          <Brain className=\"h-4 w-4 text-purple-600\" />\n                          <div>\n                            <div className=\"text-sm font-medium\">Criteria Engine</div>\n                            <div className=\"text-xs text-gray-600\">Formal diagnosis</div>\n                          </div>\n                        </Link>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </>\n            ) : (\n              <Card>\n                <CardContent className=\"text-center py-12\">\n                  <FileText className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-semibold text-gray-600 mb-2\">No Analysis Yet</h3>\n                  <p className=\"text-gray-500\">Enter a patient case and click \"Analyze Case\" to see results</p>\n                </CardContent>\n              </Card>\n            )}\n          </div>"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "diff": "Index: /home/user/project/app/case-analyzer/page.tsx\n===================================================================\n--- /home/user/project/app/case-analyzer/page.tsx\n+++ /home/user/project/app/case-analyzer/page.tsx\n@@ -505,154 +505,201 @@\n {/* Results Section */}\n <div className=\"space-y-6\">\n   {analysisResult ? (\n     <>\n-      {/* Overall Assessment */}\n-      <Card>\n-        <CardHeader>\n-          <CardTitle className=\"flex items-center gap-2\">\n-            <CheckCircle className=\"h-5 w-5\" />\n-            ME/CFS Likelihood Assessment\n-          </CardTitle>\n-        </CardHeader>\n-        <CardContent>\n-          <div className=\"space-y-4\">\n-            <div className=\"text-center\">\n-              <div className=\"text-3xl font-bold mb-2\">{analysisResult.overallScore}%</div>\n-              <Badge className={`text-sm ${getLikelihoodColor(analysisResult.mecfsLikelihood)}`}>\n-                {getLikelihoodText(analysisResult.mecfsLikelihood)}\n-              </Badge>\n+      {/* Red Flags Alert */}\n+      {analysisResult.redFlags.length > 0 && (\n+        <Alert className=\"border-red-200 bg-red-50\">\n+          <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n+          <AlertDescription className=\"text-red-800\">\n+            <strong>ðŸš¨ RED FLAGS DETECTED:</strong> {analysisResult.redFlags.join(', ')}\n+            <br /><strong>Urgent evaluation required before proceeding with complex diagnoses.</strong>\n+          </AlertDescription>\n+        </Alert>\n+      )}\n+\n+      {/* Primary Diagnosis */}\n+      {analysisResult.primaryDiagnosis && (\n+        <Card className=\"border-2 border-blue-500 bg-blue-50\">\n+          <CardHeader>\n+            <CardTitle className=\"flex items-center gap-2 text-blue-900\">\n+              <CheckCircle className=\"h-5 w-5\" />\n+              Primary Diagnostic Consideration\n+            </CardTitle>\n+          </CardHeader>\n+          <CardContent>\n+            <div className=\"text-lg font-semibold text-blue-900\">\n+              {analysisResult.primaryDiagnosis}\n             </div>\n-            \n-            <Progress value={analysisResult.overallScore} className=\"h-3\" />\n-            \n-            {analysisResult.redFlags.length > 0 && (\n-              <Alert className=\"border-red-200 bg-red-50\">\n-                <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n-                <AlertDescription className=\"text-red-800\">\n-                  <strong>Red Flags Detected:</strong> {analysisResult.redFlags.join(', ')}\n-                </AlertDescription>\n-              </Alert>\n+            {analysisResult.secondaryDiagnoses.length > 0 && (\n+              <div className=\"mt-2 text-sm text-blue-800\">\n+                <strong>Also consider:</strong> {analysisResult.secondaryDiagnoses.join(', ')}\n+              </div>\n             )}\n-          </div>\n-        </CardContent>\n-      </Card>\n+          </CardContent>\n+        </Card>\n+      )}\n \n-      {/* NICE NG206 Criteria Assessment */}\n+      {/* All Diagnostic Frameworks */}\n       <Card>\n         <CardHeader>\n           <CardTitle className=\"flex items-center gap-2\">\n-            <Brain className=\"h-5 w-5\" />\n-            NICE NG206 Criteria Assessment\n+            <Users className=\"h-5 w-5\" />\n+            Multi-Framework Analysis Results\n           </CardTitle>\n+          <CardDescription>\n+            Assessment across all available diagnostic criteria\n+          </CardDescription>\n         </CardHeader>\n         <CardContent>\n-          <div className=\"space-y-3\">\n-            {[\n-              { key: 'debilitatingFatigue', label: 'Debilitating fatigue' },\n-              { key: 'postExertionalMalaise', label: 'Post-exertional malaise' },\n-              { key: 'unrefreshingSleep', label: 'Unrefreshing sleep' },\n-              { key: 'cognitiveDifficulties', label: 'Cognitive difficulties' },\n-              { key: 'duration', label: 'Duration â‰¥3 months' }\n-            ].map(({ key, label }) => (\n-              <div key={key} className=\"flex items-center gap-2\">\n-                {analysisResult.criteriaAssessment[key as keyof typeof analysisResult.criteriaAssessment] ? (\n-                  <CheckCircle className=\"h-4 w-4 text-green-600\" />\n-                ) : (\n-                  <div className=\"w-4 h-4 rounded-full border-2 border-gray-300\" />\n-                )}\n-                <span className={`text-sm ${\n-                  analysisResult.criteriaAssessment[key as keyof typeof analysisResult.criteriaAssessment] \n-                    ? 'text-green-800 font-medium' \n-                    : 'text-gray-600'\n-                }`}>\n-                  {label}\n-                </span>\n-              </div>\n+          <div className=\"grid md:grid-cols-2 gap-4\">\n+            {analysisResult.frameworks.map((framework) => (\n+              <Card key={framework.id} className={`${\n+                framework.likelihood === 'very-high' || framework.likelihood === 'high' \n+                  ? 'border-2 border-orange-400 bg-orange-50' \n+                  : framework.likelihood === 'moderate' \n+                  ? 'border-yellow-300 bg-yellow-50'\n+                  : 'border-gray-200'\n+              }`}>\n+                <CardHeader className=\"pb-3\">\n+                  <CardTitle className=\"text-sm flex items-center gap-2\">\n+                    <framework.icon className=\"h-4 w-4\" />\n+                    {framework.name}\n+                  </CardTitle>\n+                  <div className=\"flex justify-between items-center\">\n+                    <Badge className={`text-xs ${getLikelihoodColor(framework.likelihood)}`}>\n+                      {getLikelihoodText(framework.likelihood)}\n+                    </Badge>\n+                    <Badge variant=\"outline\" className=\"text-xs\">\n+                      {framework.score}% â€¢ {framework.confidence}\n+                    </Badge>\n+                  </div>\n+                  <div className=\"text-xs text-gray-600\">\n+                    ICD-10: {framework.icdCode}\n+                  </div>\n+                </CardHeader>\n+                <CardContent>\n+                  <div className=\"space-y-2\">\n+                    <Progress value={framework.score} className=\"h-2\" />\n+                    \n+                    {framework.keyFindings.length > 0 && (\n+                      <div>\n+                        <div className=\"text-xs font-medium text-gray-700 mb-1\">Key Findings:</div>\n+                        {framework.keyFindings.map((finding, idx) => (\n+                          <div key={idx} className=\"text-xs text-gray-600 flex items-start gap-1\">\n+                            <CheckCircle className=\"h-3 w-3 text-green-600 mt-0.5 flex-shrink-0\" />\n+                            {finding}\n+                          </div>\n+                        ))}\n+                      </div>\n+                    )}\n+                    \n+                    {framework.recommendations.length > 0 && (\n+                      <div>\n+                        <div className=\"text-xs font-medium text-gray-700 mb-1\">Recommendations:</div>\n+                        {framework.recommendations.map((rec, idx) => (\n+                          <div key={idx} className=\"text-xs text-blue-700 flex items-start gap-1\">\n+                            <span className=\"text-blue-600 mt-0.5\">â€¢</span>\n+                            {rec}\n+                          </div>\n+                        ))}\n+                      </div>\n+                    )}\n+                  </div>\n+                </CardContent>\n+              </Card>\n             ))}\n           </div>\n         </CardContent>\n       </Card>\n \n-      {/* PEM Assessment */}\n-      {analysisResult.pemIndicators.present && (\n+      {/* Overall Key Findings */}\n+      {analysisResult.keyFindings.length > 0 && (\n         <Card>\n           <CardHeader>\n             <CardTitle className=\"flex items-center gap-2\">\n-              <Activity className=\"h-5 w-5\" />\n-              Post-Exertional Malaise\n+              <Heart className=\"h-5 w-5\" />\n+              Overall Key Clinical Findings\n             </CardTitle>\n           </CardHeader>\n           <CardContent>\n-            <div className=\"space-y-2\">\n-              <Badge variant=\"outline\" className=\"capitalize\">\n-                {analysisResult.pemIndicators.severity} severity\n-              </Badge>\n-              <div className=\"text-sm text-gray-600\">\n-                <strong>Evidence found:</strong>\n-                <ul className=\"list-disc list-inside mt-1\">\n-                  {analysisResult.pemIndicators.evidence.map((evidence, idx) => (\n-                    <li key={idx}>{evidence}</li>\n-                  ))}\n-                </ul>\n-              </div>\n+            <div className=\"grid md:grid-cols-2 gap-2\">\n+              {analysisResult.keyFindings.map((finding, idx) => (\n+                <div key={idx} className=\"flex items-start gap-2 text-sm\">\n+                  <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5 flex-shrink-0\" />\n+                  {finding}\n+                </div>\n+              ))}\n             </div>\n           </CardContent>\n         </Card>\n       )}\n \n-      {/* Key Findings */}\n+      {/* Overall Recommendations */}\n       <Card>\n         <CardHeader>\n           <CardTitle className=\"flex items-center gap-2\">\n-            <Heart className=\"h-5 w-5\" />\n-            Key Clinical Findings\n+            <Lightbulb className=\"h-5 w-5\" />\n+            Clinical Recommendations\n           </CardTitle>\n         </CardHeader>\n         <CardContent>\n           <div className=\"space-y-2\">\n-            {analysisResult.keyFindings.map((finding, idx) => (\n+            {analysisResult.overallRecommendations.map((rec, idx) => (\n               <div key={idx} className=\"flex items-start gap-2\">\n-                <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5 flex-shrink-0\" />\n-                <span className=\"text-sm\">{finding}</span>\n+                <span className={`mt-1 ${rec.includes('ðŸš¨') ? 'text-red-600' : 'text-blue-600'}`}>\n+                  {rec.includes('ðŸš¨') ? 'ðŸš¨' : 'â€¢'}\n+                </span>\n+                <span className={`text-sm ${rec.includes('ðŸš¨') ? 'text-red-800 font-semibold' : ''}`}>\n+                  {rec.replace('ðŸš¨ ', '')}\n+                </span>\n               </div>\n             ))}\n           </div>\n         </CardContent>\n       </Card>\n \n-      {/* Recommendations */}\n-      <Card>\n+      {/* Next Steps */}\n+      <Card className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200\">\n         <CardHeader>\n-          <CardTitle>Clinical Recommendations</CardTitle>\n+          <CardTitle className=\"flex items-center gap-2 text-blue-900\">\n+            <Activity className=\"h-5 w-5\" />\n+            Suggested Next Steps\n+          </CardTitle>\n         </CardHeader>\n         <CardContent>\n-          <div className=\"space-y-2\">\n-            {analysisResult.recommendations.map((rec, idx) => (\n-              <div key={idx} className=\"flex items-start gap-2\">\n-                <span className=\"text-blue-600 mt-1\">â€¢</span>\n-                <span className=\"text-sm\">{rec}</span>\n-              </div>\n-            ))}\n+          <div className=\"space-y-3\">\n+            <div className=\"grid md:grid-cols-3 gap-4\">\n+              <Link href=\"/quick-screen\" \n+                className=\"flex items-center gap-2 p-3 bg-white rounded-lg border hover:shadow-md transition-shadow\">\n+                <Clock className=\"h-4 w-4 text-blue-600\" />\n+                <div>\n+                  <div className=\"text-sm font-medium\">Quick Screen</div>\n+                  <div className=\"text-xs text-gray-600\">Structured assessment</div>\n+                </div>\n+              </Link>\n+              \n+              <Link href=\"/stand-test\" \n+                className=\"flex items-center gap-2 p-3 bg-white rounded-lg border hover:shadow-md transition-shadow\">\n+                <Heart className=\"h-4 w-4 text-red-600\" />\n+                <div>\n+                  <div className=\"text-sm font-medium\">Stand Test</div>\n+                  <div className=\"text-xs text-gray-600\">POTS evaluation</div>\n+                </div>\n+              </Link>\n+              \n+              <Link href=\"/criteria-engine\" \n+                className=\"flex items-center gap-2 p-3 bg-white rounded-lg border hover:shadow-md transition-shadow\">\n+                <Brain className=\"h-4 w-4 text-purple-600\" />\n+                <div>\n+                  <div className=\"text-sm font-medium\">Criteria Engine</div>\n+                  <div className=\"text-xs text-gray-600\">Formal diagnosis</div>\n+                </div>\n+              </Link>\n+            </div>\n           </div>\n         </CardContent>\n       </Card>\n-\n-      {/* Differential Diagnoses */}\n-      <Card>\n-        <CardHeader>\n-          <CardTitle>Consider Alternative Diagnoses</CardTitle>\n-        </CardHeader>\n-        <CardContent>\n-          <div className=\"grid grid-cols-2 gap-2\">\n-            {analysisResult.differentialDiagnoses.map((diagnosis, idx) => (\n-              <Badge key={idx} variant=\"outline\" className=\"text-xs\">\n-                {diagnosis}\n-              </Badge>\n-            ))}\n-          </div>\n-        </CardContent>\n-      </Card>\n     </>\n   ) : (\n     <Card>\n       <CardContent className=\"text-center py-12\">\n"
    },
    "title": "app/case-analyzer/page.tsx",
    "time": {
      "start": 1758539468453,
      "end": 1758539468496
    }
  }
}