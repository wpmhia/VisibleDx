{
  "id": "prt_9711bd19900198Pi7BVFjFlbUj",
  "messageID": "msg_9711b80a5001bVZPJ0r9XNFluA",
  "sessionID": "ses_6a7af0913ffePKeafEVjU8Zw0Y",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_019NGVVrWQPYfJPSx7cGs5RL",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/criteria-engine/page.tsx"
    },
    "output": "<file>\n00001| 'use client'\n00002| \n00003| import { useState, useEffect } from 'react'\n00004| import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\n00005| import { Button } from '@/components/ui/button'\n00006| import { Checkbox } from '@/components/ui/checkbox'\n00007| import { Badge } from '@/components/ui/badge'\n00008| import { Alert, AlertDescription } from '@/components/ui/alert'\n00009| import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\n00010| import { Label } from '@/components/ui/label'\n00011| import { BarChart3, CheckCircle, AlertTriangle, FileText, Download } from 'lucide-react'\n00012| import Link from 'next/link'\n00013| import { useTranslation } from '@/lib/language-context'\n00014| \n00015| interface DiagnosticCriteria {\n00016|   id: string\n00017|   condition: string\n00018|   met: boolean\n00019|   criteria: { id: string; description: string; met: boolean }[]\n00020|   icdCode: string\n00021|   confidence: 'high' | 'medium' | 'low'\n00022| }\n00023| \n00024| // Criteria will be generated from translations\n00025| \n00026| export default function CriteriaEngine() {\n00027|   const { t } = useTranslation()\n00028|   \n00029|   const getMECFSCriteria = () => t.criteria.mecfs.criteria.map((desc, index) => ({\n00030|     id: ['fatigue', 'pem', 'sleep', 'cognitive', 'duration', 'functional_impairment', 'exclusion'][index],\n00031|     description: desc,\n00032|     met: false\n00033|   }))\n00034|   \n00035|   const getLongCovidCriteria = () => t.criteria.longCovid.criteria.map((desc, index) => ({\n00036|     id: ['covid_history', 'duration', 'multisystem', 'unexplained'][index],\n00037|     description: desc,\n00038|     met: false\n00039|   }))\n00040|   \n00041|   const getPOTSCriteria = () => t.criteria.pots.criteria.map((desc, index) => ({\n00042|     id: ['hr_increase', 'sustained', 'symptoms', 'duration_pots', 'no_oh'][index],\n00043|     description: desc,\n00044|     met: false\n00045|   }))\n00046| \n00047|   const [mecfsChecked, setMecfsChecked] = useState(() => getMECFSCriteria())\n00048|   const [longCovidChecked, setLongCovidChecked] = useState(() => getLongCovidCriteria())\n00049|   const [potsChecked, setPotsChecked] = useState(() => getPOTSCriteria())\n00050|   const [covidTiming, setCovidTiming] = useState<string>('')\n00051|   const [isComplete, setIsComplete] = useState(false)\n00052| \n00053|   // Update criteria descriptions when language changes\n00054|   useEffect(() => {\n00055|     setMecfsChecked(prev => {\n00056|       const newCriteria = getMECFSCriteria()\n00057|       return prev.map((item, index) => ({\n00058|         ...item,\n00059|         description: newCriteria[index].description\n00060|       }))\n00061|     })\n00062|   }, [t])\n00063| \n00064|   useEffect(() => {\n00065|     setLongCovidChecked(prev => {\n00066|       const newCriteria = getLongCovidCriteria()\n00067|       return prev.map((item, index) => ({\n00068|         ...item,\n00069|         description: newCriteria[index].description\n00070|       }))\n00071|     })\n00072|   }, [t])\n00073| \n00074|   useEffect(() => {\n00075|     setPotsChecked(prev => {\n00076|       const newCriteria = getPOTSCriteria()\n00077|       return prev.map((item, index) => ({\n00078|         ...item,\n00079|         description: newCriteria[index].description\n00080|       }))\n00081|     })\n00082|   }, [t])\n00083| \n00084|   const handleMECFSChange = (id: string, checked: boolean) => {\n00085|     setMecfsChecked(prev => prev.map(item => \n00086|       item.id === id ? { ...item, met: checked } : item\n00087|     ))\n00088|   }\n00089| \n00090|   const handleLongCovidChange = (id: string, checked: boolean) => {\n00091|     setLongCovidChecked(prev => prev.map(item => \n00092|       item.id === id ? { ...item, met: checked } : item\n00093|     ))\n00094|   }\n00095| \n00096|   const handlePOTSChange = (id: string, checked: boolean) => {\n00097|     setPotsChecked(prev => prev.map(item => \n00098|       item.id === id ? { ...item, met: checked } : item\n00099|     ))\n00100|   }\n00101| \n00102|   const calculateDiagnoses = (): DiagnosticCriteria[] => {\n00103|     const diagnoses: DiagnosticCriteria[] = []\n00104| \n00105|     // NICE NG206 ME/CFS Diagnosis - requires ALL 7 criteria to be met\n00106|     const niceCoreSymptoms = mecfsChecked.filter(c => ['fatigue', 'pem', 'sleep', 'cognitive'].includes(c.id) && c.met).length\n00107|     const niceDuration = mecfsChecked.find(c => c.id === 'duration')?.met || false\n00108|     const niceFunctionalImpairment = mecfsChecked.find(c => c.id === 'functional_impairment')?.met || false\n00109|     const niceExclusion = mecfsChecked.find(c => c.id === 'exclusion')?.met || false\n00110|     \n00111|     // NICE NG206: ALL criteria must be met (all 4 core symptoms + duration + functional impairment + exclusion)\n00112|     const mecfsMet = niceCoreSymptoms === 4 && niceDuration && niceFunctionalImpairment && niceExclusion\n00113|     \n00114|     diagnoses.push({\n00115|       id: 'mecfs',\n00116|       condition: t.conditions.mecfs.fullName + ' (NICE NG206)',\n00117|       met: mecfsMet,\n00118|       criteria: mecfsChecked,\n00119|       icdCode: t.conditions.mecfs.icdCode,\n00120|       confidence: mecfsMet ? 'high' : (niceCoreSymptoms >= 3 && (niceDuration || niceFunctionalImpairment) ? 'medium' : 'low')\n00121|     })\n00122| \n00123|     // Long COVID Diagnosis\n00124|     const longCovidMet = longCovidChecked.filter(c => c.met).length >= 3\n00125|     diagnoses.push({\n00126|       id: 'longcovid',\n00127|       condition: t.conditions.longCovid.fullName,\n00128|       met: longCovidMet,\n00129|       criteria: longCovidChecked,\n00130|       icdCode: t.conditions.longCovid.icdCode,\n00131|       confidence: longCovidMet ? 'high' : 'low'\n00132|     })\n00133| \n00134|     // Enhanced POTS Diagnosis following ESC 2018/AAS-EFAS 2021 flowchart\n00135|     // Core criteria: HR increase + symptoms + duration + no OH\n00136|     const potsHRIncrease = potsChecked.find(c => c.id === 'hr_increase')?.met || false\n00137|     const potsSymptoms = potsChecked.find(c => c.id === 'symptoms')?.met || false\n00138|     const potsDuration = potsChecked.find(c => c.id === 'duration_pots')?.met || false\n00139|     const noOrthostHypotension = potsChecked.find(c => c.id === 'no_oh')?.met || false\n00140|     const sustainedTachycardia = potsChecked.find(c => c.id === 'sustained')?.met || false\n00141|     \n00142|     // POTS requires all 4 core criteria\n00143|     const potsMet = potsHRIncrease && potsSymptoms && potsDuration && noOrthostHypotension\n00144|     \n00145|     // Determine confidence based on additional criteria\n00146|     let potsConfidence: 'low' | 'medium' | 'high' = 'low'\n00147|     if (potsMet) {\n00148|       if (sustainedTachycardia && potsHRIncrease && potsSymptoms && potsDuration && noOrthostHypotension) {\n00149|         potsConfidence = 'high'\n00150|       } else if (potsHRIncrease && potsSymptoms && potsDuration) {\n00151|         potsConfidence = 'medium'\n00152|       }\n00153|     }\n00154|     \n00155|     diagnoses.push({\n00156|       id: 'pots',\n00157|       condition: t.conditions.pots.fullName,\n00158|       met: potsMet,\n00159|       criteria: potsChecked,\n00160|       icdCode: t.conditions.pots.icdCode,\n00161|       confidence: potsConfidence\n00162|     })\n00163| \n00164|     return diagnoses\n00165|   }\n00166| \n00167|   const generateReport = () => {\n00168|     const diagnoses = calculateDiagnoses()\n00169|     const positives = diagnoses.filter(d => d.met)\n00170|     \n00171|     let report = \"InvisibleDx Clinical Decision Support Report\\n\"\n00172|     report += \"=====================================\\n\\n\"\n00173|     \n00174|     report += \"DIAGNOSTIC SUMMARY:\\n\"\n00175|     if (positives.length === 0) {\n00176|       report += \"• No criteria met for ME/CFS, Long COVID, or POTS\\n\"\n00177|       report += \"• Consider alternative diagnoses\\n\"\n00178|       report += \"• Reassess if symptoms progress\\n\\n\"\n00179|     } else {\n00180|       positives.forEach(dx => {\n00181|         report += `• ${dx.condition} - CRITERIA MET (${dx.icdCode})\\n`\n00182|         report += `  Confidence: ${dx.confidence.toUpperCase()}\\n`\n00183|       })\n00184|       report += \"\\n\"\n00185|     }\n00186| \n00187|     report += \"DETAILED CRITERIA ASSESSMENT:\\n\\n\"\n00188|     \n00189|     diagnoses.forEach(dx => {\n00190|       report += `${dx.condition} (${dx.icdCode}):\\n`\n00191|       dx.criteria.forEach(criterion => {\n00192|         report += `  ${criterion.met ? '✓' : '✗'} ${criterion.description}\\n`\n00193|       })\n00194|       report += `  Result: ${dx.met ? 'CRITERIA MET' : 'Criteria not met'}\\n\\n`\n00195|     })\n00196| \n00197|     return report\n00198|   }\n00199| \n00200|   if (isComplete) {\n00201|     const diagnoses = calculateDiagnoses()\n00202|     const positives = diagnoses.filter(d => d.met)\n00203|     \n00204|     return (\n00205|       <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00206|         <div className=\"container mx-auto px-4 max-w-4xl\">\n00207|           <Card>\n00208|             <CardHeader className=\"text-center\">\n00209|               <CardTitle className=\"flex items-center justify-center gap-2 text-2xl\">\n00210|                 <CheckCircle className=\"h-6 w-6 text-green-600\" />\n00211|                 {t.criteria.results.complete}\n00212|               </CardTitle>\n00213|               <CardDescription>\n00214|                 {t.criteria.results.description}\n00215|               </CardDescription>\n00216|             </CardHeader>\n00217|             <CardContent className=\"space-y-6\">\n00218|               {positives.length > 0 ? (\n00219|                 <div className=\"space-y-4\">\n00220|                   <h3 className=\"text-lg font-semibold text-center mb-4\">{t.criteria.results.diagnosesMet}</h3>\n00221|                   {positives.map((diagnosis) => (\n00222|                     <Alert key={diagnosis.id} className=\"border-green-200 bg-green-50\">\n00223|                       <CheckCircle className=\"h-4 w-4 text-green-600\" />\n00224|                       <AlertDescription>\n00225|                         <div className=\"flex justify-between items-start\">\n00226|                           <div>\n00227|                             <strong className=\"text-green-800\">{diagnosis.condition}</strong>\n00228|                             <p className=\"text-green-700 text-sm mt-1\">\n00229|                               ICD-10 Code: {diagnosis.icdCode} | Confidence: {diagnosis.confidence}\n00230|                             </p>\n00231|                           </div>\n00232|                           <Badge className=\"bg-green-100 text-green-800\">\n00233|                             {t.criteria.results.criteriaMet}\n00234|                           </Badge>\n00235|                         </div>\n00236|                       </AlertDescription>\n00237|                     </Alert>\n00238|                   ))}\n00239|                 </div>\n00240|               ) : (\n00241|                 <Alert>\n00242|                   <AlertTriangle className=\"h-4 w-4\" />\n00243|                   <AlertDescription>\n00244|                     <strong>{t.newPatient.results.noDefinitiveDiagnoses}</strong>\n00245|                   </AlertDescription>\n00246|                 </Alert>\n00247|               )}\n00248| \n00249|               <div className=\"grid md:grid-cols-3 gap-4\">\n00250|                 {diagnoses.map((diagnosis) => (\n00251|                   <Card key={diagnosis.id} className={`border-2 ${\n00252|                     diagnosis.met ? 'border-green-500 bg-green-50' : 'border-gray-200'\n00253|                   }`}>\n00254|                     <CardHeader className=\"pb-3\">\n00255|                       <CardTitle className=\"text-sm font-semibold\">\n00256|                         {diagnosis.condition.split('(')[0].trim()}\n00257|                       </CardTitle>\n00258|                       <div className=\"flex justify-between items-center\">\n00259|                         <Badge variant={diagnosis.met ? 'default' : 'secondary'} className=\"text-xs\">\n00260|                           {diagnosis.icdCode}\n00261|                         </Badge>\n00262|                         <Badge variant={diagnosis.met ? 'default' : 'outline'} className=\"text-xs\">\n00263|                           {diagnosis.met ? t.common.met : t.common.notMet}\n00264|                         </Badge>\n00265|                       </div>\n00266|                     </CardHeader>\n00267|                     <CardContent>\n00268|                       <div className=\"space-y-2\">\n00269|                         {diagnosis.criteria.map((criterion) => (\n00270|                           <div key={criterion.id} className=\"flex items-start gap-2 text-xs\">\n00271|                             <span className={criterion.met ? 'text-green-600' : 'text-gray-400'}>\n00272|                               {criterion.met ? '✓' : '✗'}\n00273|                             </span>\n00274|                             <span className={criterion.met ? 'text-green-700' : 'text-gray-600'}>\n00275|                               {criterion.description}\n00276|                             </span>\n00277|                           </div>\n00278|                         ))}\n00279|                       </div>\n00280|                     </CardContent>\n00281|                   </Card>\n00282|                 ))}\n00283|               </div>\n00284| \n00285|               <div className=\"bg-blue-50 p-4 rounded-lg\">\n00286|                 <h4 className=\"font-semibold mb-2 text-blue-900\">{t.criteria.results.clinicalRecommendations}</h4>\n00287|                 <div className=\"text-blue-800 text-sm space-y-2\">\n00288|                   {positives.some(d => d.id === 'mecfs') && (\n00289|                     <div>\n00290|                       <strong>ME/CFS Management:</strong>\n00291|                       <ul className=\"ml-4 list-disc space-y-1 mt-1\">\n00292|                         {t.criteria.results.mecfsManagement.map((item, index) => (\n00293|                           <li key={index}>{item}</li>\n00294|                         ))}\n00295|                       </ul>\n00296|                     </div>\n00297|                   )}\n00298|                   {positives.some(d => d.id === 'longcovid') && (\n00299|                     <div>\n00300|                       <strong>Long COVID Management:</strong>\n00301|                       <ul className=\"ml-4 list-disc space-y-1 mt-1\">\n00302|                         {t.criteria.results.longCovidManagement.map((item, index) => (\n00303|                           <li key={index}>{item}</li>\n00304|                         ))}\n00305|                       </ul>\n00306|                     </div>\n00307|                   )}\n00308|                   {positives.some(d => d.id === 'pots') && (\n00309|                     <div>\n00310|                       <strong>POTS Management:</strong>\n00311|                       <ul className=\"ml-4 list-disc space-y-1 mt-1\">\n00312|                         {t.criteria.results.potsManagement.map((item, index) => (\n00313|                           <li key={index}>{item}</li>\n00314|                         ))}\n00315|                       </ul>\n00316|                     </div>\n00317|                   )}\n00318|                 </div>\n00319|               </div>\n00320| \n00321|               <div className=\"flex gap-4 justify-center\">\n00322|                 <Button onClick={() => {\n00323|                   setMecfsChecked(getMECFSCriteria())\n00324|                   setLongCovidChecked(getLongCovidCriteria())\n00325|                   setPotsChecked(getPOTSCriteria())\n00326|                   setIsComplete(false)\n00327|                 }} variant=\"outline\">\n00328|                   {t.criteria.results.reassess}\n00329|                 </Button>\n00330|                 <Button onClick={() => {\n00331|                   const report = generateReport()\n00332|                   const blob = new Blob([report], { type: 'text/plain' })\n00333|                   const url = URL.createObjectURL(blob)\n00334|                   const a = document.createElement('a')\n00335|                   a.href = url\n00336|                   a.download = 'autodx-diagnostic-report.txt'\n00337|                   a.click()\n00338|                   URL.revokeObjectURL(url)\n00339|                 }} className=\"flex items-center gap-2\">\n00340|                   <Download className=\"h-4 w-4\" />\n00341|                   {t.criteria.results.downloadReport}\n00342|                 </Button>\n00343|                 {positives.some(d => d.id === 'pots') && (\n00344|                   <Button asChild>\n00345|                     <Link href=\"/subtype-advisor\">\n00346|                       {t.criteria.results.potsSubtype}\n00347|                     </Link>\n00348|                   </Button>\n00349|                 )}\n00350|               </div>\n00351|             </CardContent>\n00352|           </Card>\n00353|         </div>\n00354|       </div>\n00355|     )\n00356|   }\n00357| \n00358|   return (\n00359|     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n00360|       <div className=\"container mx-auto px-4 max-w-4xl\">\n00361|         <div className=\"mb-6\">\n00362|           <div className=\"flex items-center gap-4 mb-4\">\n00363|             <BarChart3 className=\"h-5 w-5 text-blue-600\" />\n00364|             <div>\n00365|               <h1 className=\"text-2xl font-bold text-gray-900\">{t.criteria.title}</h1>\n00366|               <p className=\"text-gray-600\">{t.criteria.description}</p>\n00367|             </div>\n00368|           </div>\n00369|         </div>\n00370| \n00371|         <div className=\"space-y-6\">\n00372|           <Card>\n00373|             <CardHeader>\n00374|               <CardTitle className=\"text-lg text-blue-800\">{t.criteria.mecfs.title}</CardTitle>\n00375|               <CardDescription>\n00376|                 {t.criteria.mecfs.description}\n00377|               </CardDescription>\n00378|             </CardHeader>\n00379|             <CardContent>\n00380|               <div className=\"space-y-3\">\n00381|                 {mecfsChecked.map((criterion) => (\n00382|                   <div key={criterion.id} className=\"flex items-start space-x-3 p-3 rounded-lg border hover:bg-gray-50\">\n00383|                     <Checkbox\n00384|                       id={criterion.id}\n00385|                       checked={criterion.met}\n00386|                       onCheckedChange={(checked) => handleMECFSChange(criterion.id, !!checked)}\n00387|                     />\n00388|                     <Label htmlFor={criterion.id} className=\"cursor-pointer text-sm flex-1\">\n00389|                       {criterion.description}\n00390|                     </Label>\n00391|                   </div>\n00392|                 ))}\n00393|               </div>\n00394|             </CardContent>\n00395|           </Card>\n00396| \n00397|           <Card>\n00398|             <CardHeader>\n00399|               <CardTitle className=\"text-lg text-green-800\">{t.criteria.longCovid.title}</CardTitle>\n00400|               <CardDescription>\n00401|                 {t.criteria.longCovid.description}\n00402|               </CardDescription>\n00403|             </CardHeader>\n00404|             <CardContent>\n00405|               <div className=\"space-y-3\">\n00406|                 {longCovidChecked.map((criterion) => (\n00407|                   <div key={criterion.id} className=\"flex items-start space-x-3 p-3 rounded-lg border hover:bg-gray-50\">\n00408|                     <Checkbox\n00409|                       id={criterion.id}\n00410|                       checked={criterion.met}\n00411|                       onCheckedChange={(checked) => handleLongCovidChange(criterion.id, !!checked)}\n00412|                     />\n00413|                     <Label htmlFor={criterion.id} className=\"cursor-pointer text-sm flex-1\">\n00414|                       {criterion.description}\n00415|                     </Label>\n00416|                   </div>\n00417|                 ))}\n00418|               </div>\n00419|               \n00420|               {longCovidChecked.find(c => c.id === 'covid_history')?.met && (\n00421|                 <div className=\"mt-4 p-3 bg-green-50 rounded-lg\">\n00422|                   <Label className=\"text-sm font-medium\">COVID-19 infection timing:</Label>\n00423|                   <RadioGroup value={covidTiming} onValueChange={setCovidTiming} className=\"mt-2\">\n00424|                     <div className=\"flex items-center space-x-2\">\n00425|                       <RadioGroupItem value=\"confirmed\" id=\"confirmed\" />\n00426|                       <Label htmlFor=\"confirmed\" className=\"text-sm\">{t.criteria.longCovid.timing.confirmed}</Label>\n00427|                     </div>\n00428|                     <div className=\"flex items-center space-x-2\">\n00429|                       <RadioGroupItem value=\"probable\" id=\"probable\" />\n00430|                       <Label htmlFor=\"probable\" className=\"text-sm\">{t.criteria.longCovid.timing.probable}</Label>\n00431|                     </div>\n00432|                     <div className=\"flex items-center space-x-2\">\n00433|                       <RadioGroupItem value=\"suspected\" id=\"suspected\" />\n00434|                       <Label htmlFor=\"suspected\" className=\"text-sm\">{t.criteria.longCovid.timing.suspected}</Label>\n00435|                     </div>\n00436|                   </RadioGroup>\n00437|                 </div>\n00438|               )}\n00439|             </CardContent>\n00440|           </Card>\n00441| \n00442|           <Card>\n00443|             <CardHeader>\n00444|               <CardTitle className=\"text-lg text-purple-800\">{t.criteria.pots.title}</CardTitle>\n00445|               <CardDescription>\n00446|                 {t.criteria.pots.description}\n00447|               </CardDescription>\n00448|             </CardHeader>\n00449|             <CardContent>\n00450|               <div className=\"space-y-3\">\n00451|                 {potsChecked.map((criterion) => (\n00452|                   <div key={criterion.id} className=\"flex items-start space-x-3 p-3 rounded-lg border hover:bg-gray-50\">\n00453|                     <Checkbox\n00454|                       id={criterion.id}\n00455|                       checked={criterion.met}\n00456|                       onCheckedChange={(checked) => handlePOTSChange(criterion.id, !!checked)}\n00457|                     />\n00458|                     <Label htmlFor={criterion.id} className=\"cursor-pointer text-sm flex-1\">\n00459|                       {criterion.description}\n00460|                     </Label>\n00461|                   </div>\n00462|                 ))}\n00463|               </div>\n00464|             </CardContent>\n00465|           </Card>\n00466| \n00467|           <div className=\"flex justify-center\">\n00468|             <Button onClick={() => setIsComplete(true)} size=\"lg\" className=\"px-8\">\n00469|               <FileText className=\"h-4 w-4 mr-2\" />\n00470|               {t.criteria.results.downloadReport}\n00471|             </Button>\n00472|           </div>\n00473|         </div>\n00474|       </div>\n00475|     </div>\n00476|   )\n00477| }\n</file>",
    "metadata": {
      "preview": "'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { Badge } from '@/components/ui/badge'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\nimport { Label } from '@/components/ui/label'\nimport { BarChart3, CheckCircle, AlertTriangle, FileText, Download } from 'lucide-react'\nimport Link from 'next/link'\nimport { useTranslation } from '@/lib/language-context'\n\ninterface DiagnosticCriteria {\n  id: string\n  condition: string\n  met: boolean\n  criteria: { id: string; description: string; met: boolean }[]\n  icdCode: string"
    },
    "title": "app/criteria-engine/page.tsx",
    "time": {
      "start": 1758539272960,
      "end": 1758539272963
    }
  }
}