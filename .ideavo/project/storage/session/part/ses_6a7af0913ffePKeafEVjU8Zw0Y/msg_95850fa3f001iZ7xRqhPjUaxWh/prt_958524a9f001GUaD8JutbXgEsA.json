{
  "id": "prt_958524a9f001GUaD8JutbXgEsA",
  "messageID": "msg_95850fa3f001iZ7xRqhPjUaxWh",
  "sessionID": "ses_6a7af0913ffePKeafEVjU8Zw0Y",
  "type": "tool",
  "tool": "write",
  "callID": "toolu_0148uvrZQ6fDcaiEruix9hSt",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/quick-screen/page.tsx",
      "content": "'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Progress } from '@/components/ui/progress'\nimport { Badge } from '@/components/ui/badge'\nimport { CheckCircle, Circle, ArrowLeft, ArrowRight, Clock, AlertTriangle } from 'lucide-react'\nimport Link from 'next/link'\n\nconst screeningQuestions = [\n  {\n    id: 1,\n    question: \"Do you experience severe fatigue that is not relieved by rest?\",\n    category: \"core\"\n  },\n  {\n    id: 2,\n    question: \"Does physical or mental activity make your symptoms worse (Post-Exertional Malaise)?\",\n    category: \"pem\"\n  },\n  {\n    id: 3,\n    question: \"Do you have unrefreshing sleep, regardless of duration?\",\n    category: \"core\"\n  },\n  {\n    id: 4,\n    question: \"Do you experience cognitive difficulties (brain fog, memory problems)?\",\n    category: \"core\"\n  },\n  {\n    id: 5,\n    question: \"Do you have palpitations or rapid heart rate, especially when standing?\",\n    category: \"cardiovascular\"\n  },\n  {\n    id: 6,\n    question: \"Do you experience dizziness or lightheadedness when standing up?\",\n    category: \"orthostatic\"\n  },\n  {\n    id: 7,\n    question: \"Have you had COVID-19 or suspected COVID-19 infection?\",\n    category: \"history\"\n  },\n  {\n    id: 8,\n    question: \"Have your symptoms persisted for 3 months or longer?\",\n    category: \"duration\"\n  },\n  {\n    id: 9,\n    question: \"Do you experience muscle pain or joint pain without swelling?\",\n    category: \"pain\"\n  },\n  {\n    id: 10,\n    question: \"Do you have frequent headaches or changes in headache patterns?\",\n    category: \"neurological\"\n  },\n  {\n    id: 11,\n    question: \"Do you experience temperature dysregulation (feeling too hot/cold)?\",\n    category: \"autonomic\"\n  },\n  {\n    id: 12,\n    question: \"Do you have gastrointestinal symptoms (nausea, bloating, changes in bowel habits)?\",\n    category: \"gi\"\n  },\n  {\n    id: 13,\n    question: \"Do you experience shortness of breath or breathing difficulties?\",\n    category: \"respiratory\"\n  },\n  {\n    id: 14,\n    question: \"Have you noticed decreased exercise tolerance or physical capacity?\",\n    category: \"functional\"\n  },\n  {\n    id: 15,\n    question: \"Do you experience sensitivity to light, sound, or touch?\",\n    category: \"sensory\"\n  },\n  {\n    id: 16,\n    question: \"Have you been unable to maintain your previous level of activity?\",\n    category: \"functional\"\n  }\n]\n\nexport default function QuickScreen() {\n  const [answers, setAnswers] = useState<Record<number, boolean>>({})\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [isComplete, setIsComplete] = useState(false)\n\n  const handleAnswer = (questionId: number, answer: boolean) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }))\n  }\n\n  const nextQuestion = () => {\n    if (currentQuestion < screeningQuestions.length - 1) {\n      setCurrentQuestion(prev => prev + 1)\n    } else {\n      setIsComplete(true)\n    }\n  }\n\n  const prevQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1)\n    }\n  }\n\n  const calculateRisk = () => {\n    const totalYes = Object.values(answers).filter(Boolean).length\n    const coreSymptoms = [1, 3, 4].filter(id => answers[id]).length\n    const pemPresent = answers[2]\n    const covidHistory = answers[7]\n    const chronicity = answers[8]\n    \n    let riskLevel = 'Low'\n    let riskColor = 'bg-green-100 text-green-800'\n    \n    if (totalYes >= 8 && coreSymptoms >= 2 && pemPresent && chronicity) {\n      riskLevel = 'High'\n      riskColor = 'bg-red-100 text-red-800'\n    } else if (totalYes >= 5 && (coreSymptoms >= 2 || pemPresent)) {\n      riskLevel = 'Medium'\n      riskColor = 'bg-yellow-100 text-yellow-800'\n    }\n    \n    return { riskLevel, riskColor, totalYes, coreSymptoms, pemPresent, covidHistory, chronicity }\n  }\n\n  const progress = ((currentQuestion + 1) / screeningQuestions.length) * 100\n  const current = screeningQuestions[currentQuestion]\n  const currentAnswer = answers[current?.id]\n\n  if (isComplete) {\n    const risk = calculateRisk()\n    \n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n        <div className=\"container mx-auto px-4 max-w-2xl\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"flex items-center justify-center gap-2 text-2xl\">\n                <CheckCircle className=\"h-6 w-6 text-green-600\" />\n                Screening Complete\n              </CardTitle>\n              <CardDescription>\n                Based on your responses, here's your risk assessment\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"text-center\">\n                <Badge className={`px-4 py-2 text-lg ${risk.riskColor}`}>\n                  {risk.riskLevel} Risk for ME/CFS, Long COVID, or POTS\n                </Badge>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h4 className=\"font-semibold mb-2\">Assessment Results</h4>\n                  <ul className=\"text-sm space-y-1\">\n                    <li>Total positive responses: {risk.totalYes}/16</li>\n                    <li>Core symptoms present: {risk.coreSymptoms}/3</li>\n                    <li>Post-exertional malaise: {risk.pemPresent ? 'Yes' : 'No'}</li>\n                    <li>COVID history: {risk.covidHistory ? 'Yes' : 'No'}</li>\n                    <li>Chronic symptoms (≥3 months): {risk.chronicity ? 'Yes' : 'No'}</li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <h4 className=\"font-semibold mb-2 text-blue-900\">Next Steps</h4>\n                  <ul className=\"text-sm space-y-1 text-blue-800\">\n                    {risk.riskLevel === 'High' && (\n                      <>\n                        <li>• Proceed to Red-flag Checker</li>\n                        <li>• Complete Stand-Test Pro</li>\n                        <li>• Consider PEM-Quest assessment</li>\n                      </>\n                    )}\n                    {risk.riskLevel === 'Medium' && (\n                      <>\n                        <li>• Consider Red-flag Checker</li>\n                        <li>• Monitor symptoms closely</li>\n                        <li>• Follow-up in 4-6 weeks</li>\n                      </>\n                    )}\n                    {risk.riskLevel === 'Low' && (\n                      <>\n                        <li>• Routine clinical assessment</li>\n                        <li>• Consider other diagnoses</li>\n                        <li>• Reassess if symptoms worsen</li>\n                      </>\n                    )}\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"flex gap-4 justify-center\">\n                <Button onClick={() => {\n                  setAnswers({})\n                  setCurrentQuestion(0)\n                  setIsComplete(false)\n                }} variant=\"outline\">\n                  Retake Screening\n                </Button>\n                {risk.riskLevel !== 'Low' && (\n                  <Button asChild>\n                    <Link href=\"/red-flag-checker\">\n                      Continue to Red-flag Checker\n                    </Link>\n                  </Button>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n      <div className=\"container mx-auto px-4 max-w-2xl\">\n        <div className=\"mb-6\">\n          <Link href=\"/\" className=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 mb-4\">\n            <ArrowLeft className=\"h-4 w-4\" />\n            Back to Dashboard\n          </Link>\n          \n          <div className=\"flex items-center gap-4 mb-4\">\n            <Clock className=\"h-5 w-5 text-gray-600\" />\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Quick-Screen Assessment</h1>\n              <p className=\"text-gray-600\">16 questions · ~2 minutes · 92% sensitivity</p>\n            </div>\n          </div>\n          \n          <Progress value={progress} className=\"h-2\" />\n          <p className=\"text-sm text-gray-600 mt-2\">\n            Question {currentQuestion + 1} of {screeningQuestions.length}\n          </p>\n        </div>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">\n              {current.question}\n            </CardTitle>\n            <CardDescription>\n              Category: {current.category.charAt(0).toUpperCase() + current.category.slice(1)}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex gap-4 justify-center\">\n                <Button\n                  onClick={() => handleAnswer(current.id, true)}\n                  variant={currentAnswer === true ? \"default\" : \"outline\"}\n                  className=\"flex items-center gap-2 px-8\"\n                >\n                  {currentAnswer === true ? <CheckCircle className=\"h-4 w-4\" /> : <Circle className=\"h-4 w-4\" />}\n                  Yes\n                </Button>\n                <Button\n                  onClick={() => handleAnswer(current.id, false)}\n                  variant={currentAnswer === false ? \"default\" : \"outline\"}\n                  className=\"flex items-center gap-2 px-8\"\n                >\n                  {currentAnswer === false ? <CheckCircle className=\"h-4 w-4\" /> : <Circle className=\"h-4 w-4\" />}\n                  No\n                </Button>\n              </div>\n\n              <div className=\"flex justify-between pt-6\">\n                <Button \n                  onClick={prevQuestion} \n                  disabled={currentQuestion === 0}\n                  variant=\"outline\"\n                  className=\"flex items-center gap-2\"\n                >\n                  <ArrowLeft className=\"h-4 w-4\" />\n                  Previous\n                </Button>\n                \n                <Button \n                  onClick={nextQuestion}\n                  disabled={currentAnswer === undefined}\n                  className=\"flex items-center gap-2\"\n                >\n                  {currentQuestion === screeningQuestions.length - 1 ? 'Complete' : 'Next'}\n                  <ArrowRight className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"mt-6 text-center\">\n          <div className=\"flex items-center justify-center gap-2 text-sm text-gray-600\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            This screening tool is for clinical decision support only and does not replace professional medical judgment\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "filepath": "/home/user/project/app/quick-screen/page.tsx",
      "exists": false
    },
    "title": "app/quick-screen/page.tsx",
    "time": {
      "start": 1758123451757,
      "end": 1758123451773
    }
  }
}