{
  "id": "prt_958551d55001JIsnqO1wpdMt59",
  "messageID": "msg_95850fa3f001iZ7xRqhPjUaxWh",
  "sessionID": "ses_6a7af0913ffePKeafEVjU8Zw0Y",
  "type": "tool",
  "tool": "write",
  "callID": "toolu_01S2zvoPTmzy2LFSRWU6HWmR",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/pem-quest/page.tsx",
      "content": "'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\nimport { Label } from '@/components/ui/label'\nimport { Progress } from '@/components/ui/progress'\nimport { Badge } from '@/components/ui/badge'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { ArrowLeft, ArrowRight, Activity, Clock, TrendingDown, CheckCircle } from 'lucide-react'\nimport Link from 'next/link'\n\ninterface PEMQuestion {\n  id: string\n  question: string\n  description?: string\n  options: { value: string; label: string; score: number }[]\n}\n\nconst pemQuestions: PEMQuestion[] = [\n  {\n    id: 'frequency',\n    question: 'How often do you experience a worsening of symptoms following physical activity?',\n    description: 'Consider activities like walking, climbing stairs, or household chores',\n    options: [\n      { value: 'never', label: 'Never', score: 0 },\n      { value: 'rarely', label: 'Rarely (less than 25% of the time)', score: 1 },\n      { value: 'sometimes', label: 'Sometimes (25-50% of the time)', score: 2 },\n      { value: 'often', label: 'Often (50-75% of the time)', score: 3 },\n      { value: 'always', label: 'Always or almost always (more than 75% of the time)', score: 4 }\n    ]\n  },\n  {\n    id: 'mental_frequency',\n    question: 'How often do you experience a worsening of symptoms following mental activity?',\n    description: 'Consider activities like reading, concentrating, or problem-solving',\n    options: [\n      { value: 'never', label: 'Never', score: 0 },\n      { value: 'rarely', label: 'Rarely (less than 25% of the time)', score: 1 },\n      { value: 'sometimes', label: 'Sometimes (25-50% of the time)', score: 2 },\n      { value: 'often', label: 'Often (50-75% of the time)', score: 3 },\n      { value: 'always', label: 'Always or almost always (more than 75% of the time)', score: 4 }\n    ]\n  },\n  {\n    id: 'onset_time',\n    question: 'How soon after activity do your symptoms typically worsen?',\n    options: [\n      { value: 'no_worsening', label: 'No worsening occurs', score: 0 },\n      { value: 'during', label: 'During the activity', score: 2 },\n      { value: 'immediately', label: 'Immediately after (within 30 minutes)', score: 3 },\n      { value: 'hours', label: 'Within a few hours (2-6 hours)', score: 4 },\n      { value: 'next_day', label: 'The next day or later', score: 3 }\n    ]\n  },\n  {\n    id: 'severity',\n    question: 'How severe is the worsening of your symptoms after activity?',\n    options: [\n      { value: 'none', label: 'No worsening', score: 0 },\n      { value: 'mild', label: 'Mild - slightly worse than before activity', score: 1 },\n      { value: 'moderate', label: 'Moderate - noticeably worse, but manageable', score: 2 },\n      { value: 'severe', label: 'Severe - significantly worse, difficult to function', score: 3 },\n      { value: 'very_severe', label: 'Very severe - unable to function, bedridden', score: 4 }\n    ]\n  },\n  {\n    id: 'recovery_time',\n    question: 'How long does it typically take for your symptoms to return to baseline after activity?',\n    options: [\n      { value: 'no_recovery_needed', label: 'No recovery time needed', score: 0 },\n      { value: 'hours', label: 'A few hours', score: 1 },\n      { value: 'one_day', label: 'About one day', score: 2 },\n      { value: 'several_days', label: 'Several days (2-6 days)', score: 3 },\n      { value: 'week_or_more', label: 'A week or more', score: 4 }\n    ]\n  }\n]\n\nexport default function PEMQuest() {\n  const [answers, setAnswers] = useState<Record<string, string>>({})\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [isComplete, setIsComplete] = useState(false)\n\n  const handleAnswer = (questionId: string, value: string) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: value\n    }))\n  }\n\n  const nextQuestion = () => {\n    if (currentQuestion < pemQuestions.length - 1) {\n      setCurrentQuestion(prev => prev + 1)\n    } else {\n      setIsComplete(true)\n    }\n  }\n\n  const prevQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1)\n    }\n  }\n\n  const calculatePEMScore = () => {\n    const totalScore = pemQuestions.reduce((sum, question) => {\n      const answer = answers[question.id]\n      const option = question.options.find(opt => opt.value === answer)\n      return sum + (option?.score || 0)\n    }, 0)\n\n    const maxScore = pemQuestions.reduce((sum, question) => {\n      return sum + Math.max(...question.options.map(opt => opt.score))\n    }, 0)\n\n    const percentage = (totalScore / maxScore) * 100\n\n    let severity = 'None'\n    let color = 'bg-green-100 text-green-800'\n    \n    if (percentage >= 75) {\n      severity = 'Severe PEM'\n      color = 'bg-red-100 text-red-800'\n    } else if (percentage >= 50) {\n      severity = 'Moderate PEM'\n      color = 'bg-orange-100 text-orange-800'\n    } else if (percentage >= 25) {\n      severity = 'Mild PEM'\n      color = 'bg-yellow-100 text-yellow-800'\n    }\n\n    const isPEMPresent = percentage >= 25\n\n    return {\n      totalScore,\n      maxScore,\n      percentage: Math.round(percentage),\n      severity,\n      color,\n      isPEMPresent\n    }\n  }\n\n  const progress = ((currentQuestion + 1) / pemQuestions.length) * 100\n  const current = pemQuestions[currentQuestion]\n  const currentAnswer = answers[current?.id]\n\n  if (isComplete) {\n    const pemScore = calculatePEMScore()\n    \n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n        <div className=\"container mx-auto px-4 max-w-3xl\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"flex items-center justify-center gap-2 text-2xl\">\n                <CheckCircle className=\"h-6 w-6 text-green-600\" />\n                PEM Assessment Complete\n              </CardTitle>\n              <CardDescription>\n                Post-Exertional Malaise evaluation based on DePaul criteria\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"text-center\">\n                <Badge className={`px-4 py-2 text-lg ${pemScore.color}`}>\n                  {pemScore.severity}\n                </Badge>\n                <p className=\"text-sm text-gray-600 mt-2\">\n                  Score: {pemScore.totalScore}/{pemScore.maxScore} ({pemScore.percentage}%)\n                </p>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <h3 className=\"font-semibold text-lg\">Assessment Results</h3>\n                  \n                  <div className=\"bg-gray-50 p-4 rounded-lg space-y-3\">\n                    {pemQuestions.map((question) => {\n                      const answer = answers[question.id]\n                      const option = question.options.find(opt => opt.value === answer)\n                      return (\n                        <div key={question.id} className=\"border-b border-gray-200 pb-2 last:border-b-0\">\n                          <p className=\"text-sm font-medium text-gray-700 mb-1\">\n                            {question.question}\n                          </p>\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm text-gray-600\">{option?.label}</span>\n                            <Badge variant=\"outline\" className=\"text-xs\">\n                              {option?.score} pts\n                            </Badge>\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <h3 className=\"font-semibold text-lg\">Clinical Interpretation</h3>\n                  \n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold mb-2 text-blue-900\">PEM Status</h4>\n                    <p className=\"text-blue-800 text-sm mb-2\">\n                      {pemScore.isPEMPresent \n                        ? 'Post-Exertional Malaise is likely present'\n                        : 'Post-Exertional Malaise is unlikely'\n                      }\n                    </p>\n                    \n                    {pemScore.isPEMPresent && (\n                      <div className=\"text-blue-800 text-sm space-y-1\">\n                        <p>• PEM is a key diagnostic criterion for ME/CFS</p>\n                        <p>• Consider activity pacing and energy management</p>\n                        <p>• Avoid graded exercise therapy (GET)</p>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold mb-2 text-yellow-900\">Recommendations</h4>\n                    <div className=\"text-yellow-800 text-sm space-y-1\">\n                      {pemScore.severity === 'Severe PEM' && (\n                        <>\n                          <p>• Strict activity pacing essential</p>\n                          <p>• Consider disability evaluation</p>\n                          <p>• Specialist ME/CFS clinic referral</p>\n                        </>\n                      )}\n                      {pemScore.severity === 'Moderate PEM' && (\n                        <>\n                          <p>• Implement careful activity pacing</p>\n                          <p>• Monitor for symptom progression</p>\n                          <p>• Consider occupational therapy</p>\n                        </>\n                      )}\n                      {pemScore.severity === 'Mild PEM' && (\n                        <>\n                          <p>• Begin gentle activity pacing</p>\n                          <p>• Education on PEM recognition</p>\n                          <p>• Regular symptom monitoring</p>\n                        </>\n                      )}\n                      {pemScore.severity === 'None' && (\n                        <>\n                          <p>• PEM not significantly present</p>\n                          <p>• Consider other diagnoses</p>\n                          <p>• Standard activity as tolerated</p>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <Alert>\n                <Activity className=\"h-4 w-4\" />\n                <AlertDescription>\n                  <strong>Important:</strong> PEM is the hallmark symptom of ME/CFS. If present, \n                  avoid activities that consistently trigger symptom worsening. Energy management \n                  and pacing are key treatment strategies.\n                </AlertDescription>\n              </Alert>\n\n              <div className=\"flex gap-4 justify-center\">\n                <Button onClick={() => {\n                  setAnswers({})\n                  setCurrentQuestion(0)\n                  setIsComplete(false)\n                }} variant=\"outline\">\n                  Retake Assessment\n                </Button>\n                <Button asChild>\n                  <Link href=\"/criteria-engine\">\n                    Continue to Criteria Engine\n                  </Link>\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n      <div className=\"container mx-auto px-4 max-w-3xl\">\n        <div className=\"mb-6\">\n          <Link href=\"/\" className=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 mb-4\">\n            <ArrowLeft className=\"h-4 w-4\" />\n            Back to Dashboard\n          </Link>\n          \n          <div className=\"flex items-center gap-4 mb-4\">\n            <Activity className=\"h-5 w-5 text-orange-600\" />\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">PEM-Quest Assessment</h1>\n              <p className=\"text-gray-600\">Post-Exertional Malaise evaluation - 5 validated questions</p>\n            </div>\n          </div>\n          \n          <Progress value={progress} className=\"h-2\" />\n          <p className=\"text-sm text-gray-600 mt-2\">\n            Question {currentQuestion + 1} of {pemQuestions.length}\n          </p>\n        </div>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">\n              {current.question}\n            </CardTitle>\n            {current.description && (\n              <CardDescription>\n                {current.description}\n              </CardDescription>\n            )}\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-6\">\n              <RadioGroup \n                value={currentAnswer || ''} \n                onValueChange={(value) => handleAnswer(current.id, value)}\n                className=\"space-y-3\"\n              >\n                {current.options.map((option) => (\n                  <div key={option.value} className=\"flex items-start space-x-3 p-3 rounded-lg border hover:bg-gray-50\">\n                    <RadioGroupItem value={option.value} id={option.value} className=\"mt-1\" />\n                    <div className=\"flex-1\">\n                      <Label htmlFor={option.value} className=\"cursor-pointer font-medium\">\n                        {option.label}\n                      </Label>\n                      <div className=\"flex justify-between items-center mt-1\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {option.score} {option.score === 1 ? 'point' : 'points'}\n                        </Badge>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </RadioGroup>\n\n              <div className=\"flex justify-between pt-6\">\n                <Button \n                  onClick={prevQuestion} \n                  disabled={currentQuestion === 0}\n                  variant=\"outline\"\n                  className=\"flex items-center gap-2\"\n                >\n                  <ArrowLeft className=\"h-4 w-4\" />\n                  Previous\n                </Button>\n                \n                <Button \n                  onClick={nextQuestion}\n                  disabled={!currentAnswer}\n                  className=\"flex items-center gap-2\"\n                >\n                  {currentQuestion === pemQuestions.length - 1 ? 'Complete Assessment' : 'Next Question'}\n                  <ArrowRight className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"mt-6\">\n          <Card className=\"border-orange-200 bg-orange-50\">\n            <CardContent className=\"pt-4\">\n              <div className=\"flex items-start gap-3\">\n                <TrendingDown className=\"h-5 w-5 text-orange-600 mt-1\" />\n                <div className=\"text-sm text-orange-800\">\n                  <h4 className=\"font-semibold mb-1\">About Post-Exertional Malaise (PEM)</h4>\n                  <p>\n                    PEM is the worsening of symptoms following physical or mental activity that \n                    was previously tolerated. It's a key feature of ME/CFS and often occurs \n                    in Long COVID. Symptoms may be delayed and can last days to weeks.\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  )\n}"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "filepath": "/home/user/project/app/pem-quest/page.tsx",
      "exists": false
    },
    "title": "app/pem-quest/page.tsx",
    "time": {
      "start": 1758123649108,
      "end": 1758123649123
    }
  }
}