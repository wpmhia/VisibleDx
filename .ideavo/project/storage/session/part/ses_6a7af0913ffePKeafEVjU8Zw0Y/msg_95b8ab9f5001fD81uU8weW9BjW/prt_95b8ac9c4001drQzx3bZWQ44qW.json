{
  "id": "prt_95b8ac9c4001drQzx3bZWQ44qW",
  "messageID": "msg_95b8ab9f5001fD81uU8weW9BjW",
  "sessionID": "ses_6a7af0913ffePKeafEVjU8Zw0Y",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_019haEizYbMz4dz64HYedSQL",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/page.tsx"
    },
    "output": "<file>\n00001| 'use client'\n00002| \n00003| import { useState } from 'react'\n00004| import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\n00005| import { Button } from '@/components/ui/button'\n00006| import { Badge } from '@/components/ui/badge'\n00007| import { Activity, Clock, Users, FileText, BarChart3, Heart, User } from 'lucide-react'\n00008| import Link from 'next/link'\n00009| import { useTranslation } from '@/lib/language-context'\n00010| \n00011| const getModules = (t: any) => [\n00012|   {\n00013|     id: 'quick-screen',\n00014|     title: t.dashboard.modules.quickScreen.title,\n00015|     description: t.dashboard.modules.quickScreen.description,\n00016|     icon: Clock,\n00017|     sensitivity: '0.92',\n00018|     route: '/quick-screen'\n00019|   },\n00020|   {\n00021|     id: 'red-flag',\n00022|     title: t.dashboard.modules.redFlag.title,\n00023|     description: t.dashboard.modules.redFlag.description,\n00024|     icon: FileText,\n00025|     route: '/red-flag-checker'\n00026|   },\n00027|   {\n00028|     id: 'stand-test',\n00029|     title: t.dashboard.modules.standTest.title,\n00030|     description: t.dashboard.modules.standTest.description,\n00031|     icon: Heart,\n00032|     route: '/stand-test'\n00033|   },\n00034|   {\n00035|     id: 'pem-quest',\n00036|     title: t.dashboard.modules.pemQuest.title,\n00037|     description: t.dashboard.modules.pemQuest.description,\n00038|     icon: Activity,\n00039|     route: '/pem-quest'\n00040|   },\n00041|   {\n00042|     id: 'criteria-engine',\n00043|     title: t.dashboard.modules.criteriaEngine.title,\n00044|     description: t.dashboard.modules.criteriaEngine.description,\n00045|     icon: BarChart3,\n00046|     route: '/criteria-engine'\n00047|   },\n00048|   {\n00049|     id: 'subtype-advisor',\n00050|     title: t.dashboard.modules.subtypeAdvisor.title,\n00051|     description: t.dashboard.modules.subtypeAdvisor.description,\n00052|     icon: Users,\n00053|     route: '/subtype-advisor'\n00054|   }\n00055| ]\n00056| \n00057| export default function Home() {\n00058|   const [selectedModule, setSelectedModule] = useState<string | null>(null)\n00059|   const { t } = useTranslation()\n00060|   const modules = getModules(t)\n00061| \n00062|   return (\n00063|     <div className=\"bg-gradient-to-br from-blue-50 to-indigo-100\">\n00064|       <div className=\"container mx-auto px-4 py-8\">\n00065|         <div className=\"text-center mb-12\">\n00066|           <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n00067|             {t.app.title}\n00068|           </h1>\n00069|           <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-6\">\n00070|             {t.app.subtitle}\n00071|           </p>\n00072|           <div className=\"flex justify-center gap-4 flex-wrap\">\n00073|             <Badge variant=\"secondary\" className=\"px-3 py-1\">\n00074|               {t.dashboard.stats.diagnosticDelay}\n00075|             </Badge>\n00076|             <Badge variant=\"secondary\" className=\"px-3 py-1\">\n00077|               {t.dashboard.stats.doctorsConsulted}\n00078|             </Badge>\n00079|             <Badge variant=\"secondary\" className=\"px-3 py-1\">\n00080|               {t.dashboard.stats.sensitivityValidated}\n00081|             </Badge>\n00082|           </div>\n00083|         </div>\n00084| \n00085|         <div className=\"mb-8\">\n00086|           <Card className=\"border-2 border-green-500 bg-gradient-to-r from-green-50 to-blue-50\">\n00087|             <CardContent className=\"pt-6\">\n00088|               <div className=\"flex items-center justify-between\">\n00089|                 <div className=\"flex items-center gap-4\">\n00090|                   <div className=\"p-3 bg-green-100 rounded-full\">\n00091|                     <User className=\"h-8 w-8 text-green-600\" />\n00092|                   </div>\n00093|                   <div>\n00094|                     <h3 className=\"text-xl font-bold text-green-900\">{t.dashboard.smartAssessment.title}</h3>\n00095|                     <p className=\"text-green-700\">{t.dashboard.smartAssessment.description}</p>\n00096|                     <div className=\"flex gap-2 mt-2\">\n00097|                       <Badge variant=\"secondary\" className=\"text-xs\">{t.dashboard.smartAssessment.autoRouting}</Badge>\n00098|                       <Badge variant=\"secondary\" className=\"text-xs\">{t.dashboard.smartAssessment.soapNotes}</Badge>\n00099|                       <Badge variant=\"secondary\" className=\"text-xs\">{t.dashboard.smartAssessment.icdCodes}</Badge>\n00100|                     </div>\n00101|                   </div>\n00102|                 </div>\n00103|                 <Button size=\"lg\" asChild className=\"bg-green-600 hover:bg-green-700\">\n00104|                   <Link href=\"/new-patient\">\n00105|                     {t.dashboard.smartAssessment.startNew}\n00106|                   </Link>\n00107|                 </Button>\n00108|               </div>\n00109|             </CardContent>\n00110|           </Card>\n00111|         </div>\n00112| \n00113|         <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n00114|           {modules.map((module) => (\n00115|             <Card \n00116|               key={module.id} \n00117|               className={`cursor-pointer transition-all duration-200 hover:shadow-lg hover:scale-105 flex flex-col h-full ${\n00118|                 selectedModule === module.id ? 'ring-2 ring-blue-500' : ''\n00119|               }`}\n00120|               onClick={() => setSelectedModule(module.id)}\n00121|             >\n00122|               <CardHeader className=\"pb-3\">\n00123|                 <div className=\"flex items-center gap-3\">\n00124|                   <module.icon className=\"h-6 w-6 text-blue-600\" />\n00125|                   <CardTitle className=\"text-lg\">{module.title}</CardTitle>\n00126|                 </div>\n00127|                 <CardDescription className=\"text-sm\">\n00128|                   {module.description}\n00129|                 </CardDescription>\n00130|               </CardHeader>\n00131|               <CardContent className=\"flex flex-col flex-grow\">\n00132|                 <div className=\"flex-grow\">\n00133|                   {module.sensitivity && (\n00134|                     <Badge variant=\"outline\" className=\"mb-3\">\n00135|                       {t.common.sensitivity}: {module.sensitivity}\n00136|                     </Badge>\n00137|                   )}\n00138|                 </div>\n00139|                 <Button \n00140|                   className=\"w-full mt-auto\" \n00141|                   onClick={(e) => {\n00142|                     e.stopPropagation()\n00143|                     window.location.href = module.route\n00144|                   }}\n00145|                 >\n00146|                   {t.dashboard.startAssessment}\n00147|                 </Button>\n00148|               </CardContent>\n00149|             </Card>\n00150|           ))}\n00151|         </div>\n00152| \n00153|         <Card className=\"mb-8\">\n00154|           <CardHeader>\n00155|             <CardTitle className=\"flex items-center gap-2\">\n00156|               <BarChart3 className=\"h-5 w-5\" />\n00157|               {t.dashboard.algorithm.title}\n00158|             </CardTitle>\n00159|           </CardHeader>\n00160|           <CardContent>\n00161|             <div className=\"grid md:grid-cols-3 gap-4 text-sm\">\n00162|               <div className=\"bg-blue-50 p-4 rounded-lg\">\n00163|                 <h4 className=\"font-semibold text-blue-900 mb-2\">{t.dashboard.algorithm.mecfs.title}</h4>\n00164|                 <p className=\"text-blue-700\">{t.dashboard.algorithm.mecfs.criteria}</p>\n00165|                 <p className=\"text-blue-700\">{t.dashboard.algorithm.mecfs.description}</p>\n00166|               </div>\n00167|               <div className=\"bg-green-50 p-4 rounded-lg\">\n00168|                 <h4 className=\"font-semibold text-green-900 mb-2\">{t.dashboard.algorithm.longCovid.title}</h4>\n00169|                 <p className=\"text-green-700\">{t.dashboard.algorithm.longCovid.criteria}</p>\n00170|                 <p className=\"text-green-700\">{t.dashboard.algorithm.longCovid.description}</p>\n00171|               </div>\n00172|               <div className=\"bg-purple-50 p-4 rounded-lg\">\n00173|                 <h4 className=\"font-semibold text-purple-900 mb-2\">{t.dashboard.algorithm.pots.title}</h4>\n00174|                 <p className=\"text-purple-700\">{t.dashboard.algorithm.pots.criteria}</p>\n00175|                 <p className=\"text-purple-700\">{t.dashboard.algorithm.pots.description}</p>\n00176|               </div>\n00177|             </div>\n00178|           </CardContent>\n00179|         </Card>\n00180| \n00181|         <div className=\"text-center\">\n00182|           <p className=\"text-gray-600 text-sm\">\n00183|             {t.app.tagline}\n00184|           </p>\n00185|         </div>\n00186|       </div>\n00187|     </div>\n00188|   )\n00189| }\n00190| \n</file>",
    "metadata": {
      "preview": "'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Activity, Clock, Users, FileText, BarChart3, Heart, User } from 'lucide-react'\nimport Link from 'next/link'\nimport { useTranslation } from '@/lib/language-context'\n\nconst getModules = (t: any) => [\n  {\n    id: 'quick-screen',\n    title: t.dashboard.modules.quickScreen.title,\n    description: t.dashboard.modules.quickScreen.description,\n    icon: Clock,\n    sensitivity: '0.92',\n    route: '/quick-screen'\n  },\n  {"
    },
    "title": "app/page.tsx",
    "time": {
      "start": 1758177446415,
      "end": 1758177446426
    }
  }
}